#define DEFINES_H
/* File: defines.h */

/*
 * Copyright (c) 1997 Ben Harrison, James E. Wilson, Robert A. Koeneke
 *
 * This software may be copied and distributed for educational, research,
 * and not for profit purposes provided that this copyright and statement
 * are included in all such copies.  Other copyrights may also apply.
 */


/*
 * Do not edit this file unless you know *exactly* what you are doing.
 *
 * Some of the values in this file were chosen to preserve game balance,
 * while others are hard-coded based on the format of old save-files, the
 * definition of arrays in various places, mathematical properties, fast
 * computation, storage limits, or the format of external text files.
 *
 * Changing some of these values will induce crashes or memory errors or
 * savefile mis-reads.  Most of the comments in this file are meant as
 * reminders, not complete descriptions, and even a complete knowledge
 * of the source may not be sufficient to fully understand the effects
 * of changing certain definitions.
 *
 * Lastly, note that the code does not always use the symbolic constants
 * below, and sometimes uses various hard-coded values that may not even
 * be defined in this file, but which may be related to definitions here.
 * This is of course bad programming practice, but nobody is perfect...
 *
 * For example, there are MANY things that depend on the screen being
 * 80x24, with the top line used for messages, the bottom line being
 * used for status, and exactly 22 lines used to show the dungeon.
 * Just because your screen can hold 46 lines does not mean that the
 * game will work if you try to use 44 lines to show the dungeon.
 *
 * You have been warned.
 */


/*
 * Current version number of sCthangband: 1.0.20
 */

/* <<VERSION STAMP>>
 * Hack - GAME_VERSION should be less than MAX_VERSION_LEN characters long
 * to fit in high_score.what, something which cannot easily be altered.
 * GAME_NAME is less strict.
 */
#define GAME_NAME "sCthangband"
#define GAME_VERSION "1.0.20"

/* Maximum length of GAME_VERSION above, needed for high_score.what, etc.. */
#define MAX_VERSION_LEN 8

/*
 * Number of grids in each block (vertically)
 * Probably hard-coded to 11, see "generate.c"
 */
#define BLOCK_HGT	11

/*
 * Number of grids in each block (horizontally)
 * Probably hard-coded to 11, see "generate.c"
 */
#define BLOCK_WID	11


/*
 * Number of grids in each panel (vertically)
 * Must be a multiple of BLOCK_HGT
 */
#define PANEL_HGT	11

/*
 * Number of grids in each panel (horizontally)
 * Must be a multiple of BLOCK_WID
 */
#define PANEL_WID	33


/*
 * Number of grids in each screen (vertically)
 * Must be a multiple of PANEL_HGT (at least 2x)
 */
#define SCREEN_HGT	22

/*
 * Number of grids in each screen (horizontally)
 * Must be a multiple of PANEL_WID (at least 2x)
 */
#define SCREEN_WID	66


/*
 * Maximum dungeon height in grids, must be a multiple of SCREEN_HGT,
 * probably hard-coded to SCREEN_HGT * 3.
 */
#define MAX_HGT     66
#define DUNGEON_HGT MAX_HGT

/*
 * Maximum dungeon width in grids, must be a multiple of SCREEN_WID,
 * probably hard-coded to SCREEN_WID * 3.
 */
#define MAX_WID         198
#define DUNGEON_WID     MAX_WID


/*
 * Maximum amount of Angband windows.
 */
#define ANGBAND_TERM_MAX 8

/*
 * Default number of Angband windows.
 */
#define ANGBAND_TERM_DEFAULT 3

/*
 * Base help file.
 */
#define syshelpfile "help.hlp"

/*
 * Total number of stores (see "store.c", etc)
 */
#define MAX_STORES_PER_TOWN 12
#define MAX_TOWNS           (z_info->towns)
#define MAX_STORES_TOTAL    (MAX_STORES_PER_TOWN*MAX_TOWNS)
#define MAX_STORE_TYPES     12
#define MAX_CAVES           (z_info->dungeons)
#define TOWN_NONE           255

/* Is there a town at (X,Y) on the world map? */
#define is_town_p(Y,X) \
	((wild_grid[Y][X].dungeon < MAX_TOWNS) && \
	town_defs[wild_grid[Y][X].dungeon].name)

/*
 * Road Directions
	*/
#define ROAD_LEFT 0x01
#define ROAD_UP 0x02
#define ROAD_DOWN 0x04
#define ROAD_RIGHT 0x08

/*
 * Store Types
	*/

#define STORE_GENERAL    0
#define STORE_ARMOURY    1
#define STORE_WEAPON     2
#define STORE_TEMPLE     3
#define STORE_ALCHEMIST  4
#define STORE_MAGIC      5
#define STORE_BLACK      6
#define STORE_HOME       7
#define STORE_LIBRARY    8
#define STORE_INN        9
#define STORE_HALL       10
#define STORE_PAWN       11
#define STORE_NONE       99

/*
 * Dungeon flags
 */
#define DF_TOWER 0x01 /* Is this a tower? */
#define DF_START 0x02 /* Can the player start the game here? */
#define DF_KADATH 0x04 /* Hack - use Cthuloid monsters at level 35 outside. */
#define DF_NIGHTTIME 0x08 /* No access if generated during the day. */
#define DF_NO_UNIQUES 0x80 /* Don't summon uniques of the summon type. */

/*
 * Total number of owners per store (see "store.c", etc)
 */
#define MAX_OWNERS 4
#define NUM_OWNERS (z_info->owners)

/*
 * Maximum number of player "sex" types (see "table.c", etc)
 */
#define MAX_SEXES 2

/*
 * Maximum number of player "race" types (see "table.c", etc)
 */
#define MAX_RACES 30 /* Fingers crossed, hope this works... */

/* The number of "patrons" available (for Chaotic types) */
#define MAX_PATRON 16

/* Chaos Patron: Reward types: */
#define REW_POLY_SLF    0
#define REW_GAIN_EXP    1
#define REW_LOSE_EXP    2
#define REW_GOOD_OBJ    3
#define REW_GREA_OBJ    4
#define REW_CHAOS_WP    5
#define REW_GOOD_OBS    6
#define REW_GREA_OBS    7
#define REW_TY_CURSE    8
#define REW_SUMMON_M    9
#define REW_H_SUMMON    10
#define REW_DO_HAVOC    11
#define REW_GAIN_ABL    12
#define REW_LOSE_ABL    13
#define REW_RUIN_ABL    14
#define REW_AUGM_ABL    15
#define REW_POLY_WND    16
#define REW_HEAL_FUL    17
#define REW_HURT_LOT    18
#define REW_CURSE_WP    19
#define REW_CURSE_AR    20
#define REW_PISS_OFF    21
#define REW_WRATH       22
#define REW_DESTRUCT    23
#define REW_GENOCIDE    24
#define REW_MASS_GEN    25
#define REW_DISPEL_C    26
#define REW_IGNORE      27
#define REW_SER_UNDE    28
#define REW_SER_DEMO    29
#define REW_SER_MONS    30

/* An integer logarithm function. */
#define logaux(x,y) (x & 1<<y) ? y :

#define iilog(x) \
(logaux(x,31) logaux(x,30) logaux(x,29) logaux(x,28) logaux(x,27) logaux(x,26) \
logaux(x,25) logaux(x,24) logaux(x,23) logaux(x,22) logaux(x,21) logaux(x,20) \
logaux(x,19) logaux(x,18) logaux(x,17) logaux(x,16) logaux(x,15) logaux(x,14) \
logaux(x,13) logaux(x,12) logaux(x,11) logaux(x,10) logaux(x, 9) logaux(x, 8) \
logaux(x, 7) logaux(x, 6) logaux(x, 5) logaux(x, 4) logaux(x, 3) logaux(x, 2) \
logaux(x, 1) logaux(x, 0) 255)

/* Mutation indices are fixed by the save file format. */

#define MUT_SPIT_ACID                  1
#define MUT_BR_FIRE                    2
#define MUT_HYPN_GAZE                  3
#define MUT_TELEKINES                  4
#define MUT_VTELEPORT                  5 /* Voluntary teleport */
#define MUT_MIND_BLST                  6
#define MUT_RADIATION                  7
#define MUT_VAMPIRISM                  8
#define MUT_SMELL_MET                  9
#define MUT_SMELL_MON                  10
#define MUT_BLINK                      11
#define MUT_EAT_ROCK                   12
#define MUT_SWAP_POS                   13
#define MUT_SHRIEK                     14
#define MUT_ILLUMINE                   15
#define MUT_DET_CURSE                  16
#define MUT_BERSERK                    17
#define MUT_POLYMORPH                  18
#define MUT_MIDAS_TCH                  19
#define MUT_GROW_MOULD                 20
#define MUT_RESIST                     21
#define MUT_EARTHQUAKE                 22
#define MUT_EAT_MAGIC                  23
#define MUT_WEIGH_MAG                  24
#define MUT_STERILITY                  25
#define MUT_PANIC_HIT                  26
#define MUT_DAZZLE                     27
#define MUT_EYE_BEAM                   28
#define MUT_RECALL                     29
#define MUT_BANISH                     30
#define MUT_COLD_TOUCH                 31
#define MUT_LAUNCHER                   32
#define MUT_BERS_RAGE                  33
#define MUT_COWARDICE                  34
#define MUT_RTELEPORT                  35 /* Random teleport, instability */
#define MUT_ALCOHOL                    36
#define MUT_HALLU                      37
#define MUT_FLATULENT                  38
#define MUT_SCOR_TAIL                  39
#define MUT_HORNS                      40
#define MUT_BEAK                       41
#define MUT_ATT_DEMON                  42
#define MUT_PROD_MANA                  43
#define MUT_SPEED_FLUX                 44
#define MUT_BANISH_ALL                 45
#define MUT_EAT_LIGHT                  46
#define MUT_TRUNK                      47
#define MUT_ATT_ANIMAL                 48
#define MUT_TENTACLES                  49
#define MUT_RAW_CHAOS                  50
#define MUT_NORMALITY                  51
#define MUT_WRAITH                     52
#define MUT_POLY_WOUND                 53
#define MUT_WASTING                    54
#define MUT_ATT_DRAGON                 55
#define MUT_WEIRD_MIND                 56
#define MUT_NAUSEA                     57
#define MUT_CHAOS_GIFT                 58
#define MUT_WALK_SHAD                  59
#define MUT_WARNING                    60
#define MUT_INVULN                     61
#define MUT_SP_TO_HP                   62
#define MUT_HP_TO_SP                   63
#define MUT_DISARM                     64
#define MUT_HYPER_STR                  65
#define MUT_PUNY                       66
#define MUT_HYPER_INT                  67
#define MUT_MORONIC                    68
#define MUT_RESILIENT                  69
#define MUT_XTRA_FAT                   70
#define MUT_ALBINO                     71
#define MUT_FLESH_ROT                  72
#define MUT_SILLY_VOI                  73
#define MUT_BLANK_FAC                  74
#define MUT_ILL_NORM                   75
#define MUT_XTRA_EYES                  76
#define MUT_MAGIC_RES                  77
#define MUT_XTRA_NOIS                  78
#define MUT_INFRAVIS                   79
#define MUT_XTRA_LEGS                  80
#define MUT_SHORT_LEG                  81
#define MUT_ELEC_TOUC                  82
#define MUT_FIRE_BODY                  83
#define MUT_WART_SKIN                  84
#define MUT_SCALES                     85
#define MUT_IRON_SKIN                  86
#define MUT_WINGS                      87
#define MUT_FEARLESS                   88
#define MUT_REGEN                      89
#define MUT_ESP                        90
#define MUT_LIMBER                     91
#define MUT_ARTHRITIS                  92
#define MUT_RES_TIME                   93
#define MUT_VULN_ELEM                  94
#define MUT_MOTION                     95
#define MUT_SUS_STATS                  96
#define MUT_MAX 96 /* Fixed by the size of the muta* flags. */

/* Melee attacks... */

/* Maximum HP gained by a single vampiric attack. */
#define MAX_VAMPIRIC_DRAIN 100
/* Increase in the vampiric gain possible per game turn after draining. */
#define VAMPIRIC_RECOVERY 10

/* Martial arts... */
# define MAX_MA 17 /* Number of skilled martial arts attacks. */
# define MA_KNEE 2
# define MA_SLOW 3

/* Multiple by which the numbers in average_ma_damage() can grow. Must be at
 * least MAX_MA*100. */
#define MA_INTERVAL (2L<<(iilog(MAX_MA*100)))

/* Power offsets for various indices. */
#define PO_K_IDX 0 /* Can take any positive value. */
#define PO_ACTIVATION (PO_K_IDX-256)
#define PO_NAME1 (PO_ACTIVATION-256)
#define PO_TVAL (PO_NAME1-256)
#define PO_SPELL (PO_TVAL-256)
#define PO_RACIAL (PO_SPELL-256)
#define PO_PETS (PO_RACIAL-2) /* Only two powers are defined. */
#define PO_MUTA (PO_PETS-96)

#define PET_DISMISS_ONE 0 /* Dismiss one pet */
#define PET_DISMISS_MANY 1 /* Dismiss more than one pet */

/* Spell effect indices. */
#define SP_DETECT_MONSTERS PO_SPELL+1
#define SP_PHASE_DOOR PO_SPELL+2
#define SP_DETECT_DOORS_AND_TRAPS PO_SPELL+3
#define SP_LIGHT_AREA PO_SPELL+4
#define SP_CONFUSE_MONSTER PO_SPELL+5
#define SP_TELEPORT PO_SPELL+6
#define SP_SLEEP_MONSTER PO_SPELL+7
#define SP_RECHARGING PO_SPELL+8
#define SP_MAGIC_MAPPING PO_SPELL+9
#define SP_IDENTIFY PO_SPELL+10
#define SP_SLOW_MONSTER PO_SPELL+11
#define SP_MASS_SLEEP PO_SPELL+12
#define SP_HASTE_SELF PO_SPELL+14
#define SP_DETECTION_TRUE PO_SPELL+15
#define SP_IDENTIFY_TRUE PO_SPELL+16
#define SP_DETECT_OBJECTS_AND_TREASURE PO_SPELL+17
#define SP_DETECT_ENCHANTMENT PO_SPELL+18
#define SP_CHARM_MONSTER PO_SPELL+19
#define SP_DIMENSION_DOOR PO_SPELL+20
#define SP_SENSE_MINDS PO_SPELL+21
#define SP_SELF_KNOWLEDGE PO_SPELL+22
#define SP_TELEPORT_LEVEL PO_SPELL+23
#define SP_WORD_OF_RECALL PO_SPELL+24
#define SP_STASIS PO_SPELL+25
#define SP_TELEKINESIS PO_SPELL+26
#define SP_EXPLOSIVE_RUNE PO_SPELL+27
#define SP_CLAIRVOYANCE PO_SPELL+28
#define SP_ENCHANT_WEAPON PO_SPELL+29
#define SP_ENCHANT_ARMOUR PO_SPELL+30
#define SP_ALCHEMY PO_SPELL+31
#define SP_GLOBE_OF_INVULNERABILITY PO_SPELL+32
#define SP_DETECT_UNLIFE PO_SPELL+33
#define SP_MALEDICTION PO_SPELL+34
#define SP_DETECT_EVIL PO_SPELL+35
#define SP_STINKING_CLOUD PO_SPELL+36
#define SP_BLACK_SLEEP PO_SPELL+37
#define SP_RESIST_POISON PO_SPELL+38
#define SP_HORRIFY PO_SPELL+39
#define SP_ENSLAVE_UNDEAD PO_SPELL+40
#define SP_ORB_OF_ENTROPY PO_SPELL+41
#define SP_NETHER_BOLT PO_SPELL+42
#define SP_TERROR PO_SPELL+43
#define SP_VAMPIRIC_DRAIN PO_SPELL+44
#define SP_POISON_BRANDING PO_SPELL+45
#define SP_DISPEL_GOOD PO_SPELL+46
#define SP_GENOCIDE PO_SPELL+47
#define SP_RESTORE_LIFE PO_SPELL+48
#define SP_BERSERK PO_SPELL+49
#define SP_INVOKE_SPIRITS PO_SPELL+50
#define SP_DARK_BOLT PO_SPELL+51
#define SP_BATTLE_FRENZY PO_SPELL+52
#define SP_VAMPIRISM_TRUE PO_SPELL+53
#define SP_VAMPIRIC_BRANDING PO_SPELL+54
#define SP_DARKNESS_STORM PO_SPELL+55
#define SP_MASS_GENOCIDE PO_SPELL+56
#define SP_DEATH_RAY PO_SPELL+57
#define SP_RAISE_THE_DEAD PO_SPELL+58
#define SP_ESOTERIA PO_SPELL+59
#define SP_WORD_OF_DEATH PO_SPELL+60
#define SP_EVOCATION PO_SPELL+61
#define SP_HELLFIRE PO_SPELL+62
#define SP_OMNICIDE PO_SPELL+63
#define SP_WRAITHFORM PO_SPELL+64
#define SP_MAGIC_MISSILE PO_SPELL+65
#define SP_TRAP_DOOR_DESTRUCTION PO_SPELL+66
#define SP_TOUCH_OF_CONFUSION PO_SPELL+68
#define SP_MANA_BURST PO_SPELL+69
#define SP_FIRE_BOLT PO_SPELL+70
#define SP_FIST_OF_FORCE PO_SPELL+71
#define SP_WONDER PO_SPELL+73
#define SP_CHAOS_BOLT PO_SPELL+74
#define SP_SONIC_BOOM PO_SPELL+75
#define SP_DOOM_BOLT PO_SPELL+76
#define SP_FIRE_BALL PO_SPELL+77
#define SP_TELEPORT_OTHER PO_SPELL+78
#define SP_WORD_OF_DESTRUCTION PO_SPELL+79
#define SP_INVOKE_CHAOS PO_SPELL+80
#define SP_POLYMORPH_OTHER PO_SPELL+81
#define SP_CHAIN_LIGHTNING PO_SPELL+82
#define SP_ARCANE_BINDING PO_SPELL+83
#define SP_DISINTEGRATE PO_SPELL+84
#define SP_ALTER_REALITY PO_SPELL+85
#define SP_POLYMORPH_SELF PO_SPELL+86
#define SP_CHAOS_BRANDING PO_SPELL+87
#define SP_SUMMON_DEMON PO_SPELL+88
#define SP_BEAM_OF_GRAVITY PO_SPELL+89
#define SP_METEOR_SWARM PO_SPELL+90
#define SP_FLAME_STRIKE PO_SPELL+91
#define SP_CALL_CHAOS PO_SPELL+92
#define SP_SHARD_BALL PO_SPELL+93
#define SP_MANA_STORM PO_SPELL+94
#define SP_BREATHE_CHAOS PO_SPELL+95
#define SP_CALL_THE_VOID PO_SPELL+96
#define SP_MIND_BLAST PO_SPELL+98
#define SP_TAROT_DRAW PO_SPELL+99
#define SP_RESET_RECALL PO_SPELL+100
#define SP_TELEPORT_2 PO_SPELL+101
#define SP_PLANAR_SPYING PO_SPELL+103
#define SP_SUMMON_OBJECT PO_SPELL+105
#define SP_SUMMON_ANIMAL PO_SPELL+106
#define SP_PHANTASMAL_SERVANT PO_SPELL+107
#define SP_SUMMON_MONSTER PO_SPELL+108
#define SP_CONJURE_ELEMENTAL PO_SPELL+109
#define SP_BANISH PO_SPELL+112
#define SP_JOKER_CARD PO_SPELL+113
#define SP_SUMMON_SPIDERS PO_SPELL+114
#define SP_SUMMON_REPTILES PO_SPELL+115
#define SP_SUMMON_HOUNDS PO_SPELL+116
#define SP_PLANAR_BRANDING PO_SPELL+117
#define SP_PLANAR_BEING PO_SPELL+118
#define SP_DEATH_DEALING PO_SPELL+119
#define SP_SUMMON_REAVER PO_SPELL+120
#define SP_PLANAR_DIVINATION PO_SPELL+121
#define SP_SUMMON_UNDEAD PO_SPELL+123
#define SP_SUMMON_DRAGON PO_SPELL+124
#define SP_MASS_SUMMONS PO_SPELL+125
#define SP_SUMMON_DEMON_2 PO_SPELL+126
#define SP_SUMMON_ANCIENT_DRAGON PO_SPELL+127
#define SP_SUMMON_GREATER_UNDEAD PO_SPELL+128
#define SP_ZAP PO_SPELL+129
#define SP_PHLOGISTON PO_SPELL+131
#define SP_STONE_TO_MUD PO_SPELL+132
#define SP_RAY_OF_LIGHT PO_SPELL+133
#define SP_ELEMENTAL_BALL PO_SPELL+134
#define SP_CURE_LIGHT_WOUNDS PO_SPELL+140
#define SP_CURE_POISON PO_SPELL+141
#define SP_CURE_MEDIUM_WOUNDS PO_SPELL+142
#define SP_SATISFY_HUNGER PO_SPELL+143
#define SP_DETECT_TREASURE PO_SPELL+146
#define SP_DETECT_OBJECTS PO_SPELL+147
#define SP_DETECTION PO_SPELL+148
#define SP_DETECT_INVISIBILITY PO_SPELL+149
#define SP_SEE_INVISIBLE PO_SPELL+151
#define SP_RESIST_COLD PO_SPELL+153
#define SP_RESIST_FIRE PO_SPELL+154
#define SP_RESIST_LIGHTNING PO_SPELL+155
#define SP_RESIST_ACID PO_SPELL+156
#define SP_WIZARD_LOCK PO_SPELL+157
#define SP_TRAP_DOOR_DESTRUCTION_2 PO_SPELL+158
#define SP_CURE_LIGHT_WOUNDS_2 PO_SPELL+162
#define SP_BLESS PO_SPELL+163
#define SP_REMOVE_FEAR PO_SPELL+164
#define SP_CURE_MEDIUM_WOUNDS_2 PO_SPELL+167
#define SP_REMOVE_CURSE PO_SPELL+169
#define SP_CURE_CRITICAL_WOUNDS PO_SPELL+171
#define SP_SENSE_UNSEEN PO_SPELL+172
#define SP_HOLY_ORB PO_SPELL+173
#define SP_PROTECTION_FROM_EVIL PO_SPELL+174
#define SP_HEALING PO_SPELL+175
#define SP_GLYPH_OF_WARDING PO_SPELL+176
#define SP_EXORCISM PO_SPELL+177
#define SP_DISPEL_CURSE PO_SPELL+178
#define SP_DISPEL_UNDEAD_AND_DEMONS PO_SPELL+179
#define SP_DAY_OF_THE_DOVE PO_SPELL+180
#define SP_DISPEL_EVIL PO_SPELL+181
#define SP_BANISH_2 PO_SPELL+182
#define SP_HOLY_WORD PO_SPELL+183
#define SP_WARDING_TRUE PO_SPELL+184
#define SP_HEROISM PO_SPELL+185
#define SP_PRAYER PO_SPELL+186
#define SP_BLESS_WEAPON PO_SPELL+187
#define SP_RESTORATION PO_SPELL+188
#define SP_HEALING_TRUE PO_SPELL+189
#define SP_DIVINE_INTERVENTION PO_SPELL+191
#define SP_HOLY_INVULNERABILITY PO_SPELL+192
#define SP_FIRST_AID PO_SPELL+194
#define SP_DAYLIGHT PO_SPELL+197
#define SP_ANIMAL_TAMING PO_SPELL+198
#define SP_RESIST_ENVIRONMENT PO_SPELL+199
#define SP_CURE_WOUNDS_AND_POISON PO_SPELL+200
#define SP_LIGHTNING_BOLT PO_SPELL+202
#define SP_NATURE_AWARENESS PO_SPELL+203
#define SP_FROST_BOLT PO_SPELL+204
#define SP_RAY_OF_SUNLIGHT PO_SPELL+205
#define SP_ENTANGLE PO_SPELL+206
#define SP_SUMMON_ANIMAL_2 PO_SPELL+207
#define SP_HERBAL_HEALING PO_SPELL+208
#define SP_DOOR_BUILDING PO_SPELL+209
#define SP_STAIR_BUILDING PO_SPELL+210
#define SP_STONE_SKIN PO_SPELL+211
#define SP_RESISTANCE_TRUE PO_SPELL+212
#define SP_ANIMAL_FRIENDSHIP PO_SPELL+213
#define SP_WALL_OF_STONE PO_SPELL+215
#define SP_PROTECT_FROM_CORROSION PO_SPELL+216
#define SP_EARTHQUAKE PO_SPELL+217
#define SP_WHIRLWIND_ATTACK PO_SPELL+218
#define SP_BLIZZARD PO_SPELL+219
#define SP_LIGHTNING_STORM PO_SPELL+220
#define SP_WHIRLPOOL PO_SPELL+221
#define SP_CALL_SUNLIGHT PO_SPELL+222
#define SP_ELEMENTAL_BRANDING PO_SPELL+223
#define SP_NATURES_WRATH PO_SPELL+224
#define SP_PRECOGNITION PO_SPELL+225
#define SP_NEURAL_BLAST PO_SPELL+226
#define SP_MINOR_DISPLACEMENT PO_SPELL+227
#define SP_MAJOR_DISPLACEMENT PO_SPELL+228
#define SP_DOMINATION PO_SPELL+229
#define SP_PULVERISE PO_SPELL+230
#define SP_CHARACTER_ARMOUR PO_SPELL+231
#define SP_PSYCHOMETRY PO_SPELL+232
#define SP_MIND_WAVE PO_SPELL+233
#define SP_ADRENALINE_CHANNELING PO_SPELL+234
#define SP_PSYCHIC_DRAIN PO_SPELL+235
#define SP_TELEKINETIC_WAVE PO_SPELL+236

/* Spell flags. */
#define MAGIC_LEARNED 0x01
#define MAGIC_WORKED 0x02
#define MAGIC_FORGOT 0x04

/*
 * Maximum array bounds for template based arrays
 */
#define MAX_F_IDX (z_info->f_max) /* Size of "f_info[]" */
#define MAX_K_IDX (z_info->k_max) /* Size of "k_info[]" */
#define MAX_U_IDX (z_info->u_max) /* Size of u_info[] */
#define MAX_A_IDX (z_info->a_max) /* Size of "a_info[]" */
#define MAX_E_IDX (z_info->e_max) /* Size of "e_info[]" */
#define MAX_R_IDX (z_info->r_max) /* Size of "r_info[]" */
#define MAX_DEATH_EVENTS (z_info->event_max) /* Size of "death_events[]" */
#define MAX_Q_IDX (z_info->quests) /* Size of "q_list[]" */


/*
 * Maximum array bounds for entity list arrays
 */
#define MAX_O_IDX       (z_info->o_max)     /* Max size for "o_list[]" */
#define MAX_M_IDX       (z_info->m_max)     /* Max size for "m_list[]" */

/*
 * Maximum number of high scores in the high score file
 */
#define MAX_HISCORES    100


/*
 * The number of differently coloured parts of the monster memory.
 */
#define MAX_MONCOL 19

/*
 * The maximum length of the representation of a character created by
 * ascii_to_text()
 */
#define MAX_ASCII_LEN 4

/*
 * Maximum dungeon level.  The player can never reach this level
 * in the dungeon, and this value is used for various calculations
 * involving object and monster creation.  It must be at least 100.
 * Setting it below 128 may prevent the creation of some objects.
 */
#define MAX_DEPTH       128

#define dun_depth (dun_level+dun_offset)

/*
 * Maximum size of the "lite" array (see "cave.c")
 * Note that the "lite radius" will NEVER exceed 5, and even if the "lite"
 * was rectangular, we would never require more than 128 entries in the array.
 */
#define LITE_MAX 128

/*
 * Maximum size of the "view" array (see "cave.c")
 * Note that the "view radius" will NEVER exceed 20, and even if the "view"
 * was octagonal, we would never require more than 1520 entries in the array.
 */
#define VIEW_MAX 1536

/*
 * Maximum size of the "temp" array (see "cave.c")
 * We must be as large as "VIEW_MAX" and "LITE_MAX" for proper functioning
 * of "update_view()" and "update_lite()".  We must also be as large as the
 * largest illuminatable room, but no room is larger than 800 grids.  We
 * must also be large enough to allow "good enough" use as a circular queue,
 * to calculate monster flow, but note that the flow code is "paranoid".
 */
#define TEMP_MAX 1536


/*
 * Number of keymap modes
 */
#define KEYMAP_MODES 2

/*
 * Mode for original keyset commands
 */
#define KEYMAP_MODE_ORIG 0

/*
 * Mode for roguelike keyset commands
 */
#define KEYMAP_MODE_ROGUE 1


/*
 * OPTION: Maximum number of macros (see "io.c")
 * Default: assume at most 256 macros are used
 */
#define MACRO_MAX       256

/*
 * OPTION: Maximum number of "quarks" (see "io.c")
 * Default: assume at most 512 different inscriptions are used
 * 256 more were added for random artefacts.
 */
#define QUARK_MAX       768

/*
 * OPTION: Maximum number of messages to remember (see "io.c")
 * Default: assume maximal memorization of 2048 total messages
 */
#define MESSAGE_MAX     2048

/*
 * OPTION: Maximum space for the message text buffer (see "io.c")
 * Default: assume that each of the 2048 messages is repeated an
 * average of three times, and has an average length of 48
 */
#define MESSAGE_BUF     32768


/*
 * Maximum value storable in a "byte" (hard-coded)
 */
#define MAX_UCHAR       255

/*
 * Maximum value storable in a "s16b" (hard-coded)
 */
#define MAX_SHORT       32767

/*
 * Maximum value storable in a "s32b" (hard-coded)
 */
#define MAX_S32B 2147483647L

/* Reduce the repetition in passing an array and its size. */
#define ARRAY(A) \
	A, N_ELEMENTS(A)

/* Pick a random element from an array of unknown type but known size. */
#define RAND_ELEMENT(X) (X[rand_int(N_ELEMENTS(X))])

/* The maximum length of a name generated by get_table_name() */
#define MAX_TABLE_LEN 18


/*
 * Special name characters.
 */
#define CM_NORM 0x00 /* Negate both CM_TRUE and CM_FALSE. */
#define CM_TRUE 0x08 /* Require the relevant CI flag. */
#define CM_FALSE 0x10 /* Require the absence of the CI flag */
#define CM_ACT 0x18 /* Insert the relevant CI term. */

/* The CI_* fields should be sorted in increasing order of priority as
 * bases for the name. */

#define CI_BASE 0x00 /* "basename" (not in CI mask) */
#define CI_FLAVOUR 0x02 /* "modstr" */
#define CI_K_IDX 0x03 /* "extname" */
#define CI_PLURAL 0x04 /* Plural */
#define CI_EGO 0x05 /* Ego name */
#define CI_ARTEFACT 0x06 /* Artefact name */

#define CH_ARTICLE  0x08 /* Put article at start. Only for first character. */
#define CH_IS_BASE  0x10 /* Use as basis of name (see object_desc()) */

/* Give it a scroll-like name. Only for first character, removed in
 * flavor_init(). */
#define CH_SCROLL   0x7F

#define find_cm(c) ((c) & (CM_ACT | CM_TRUE | CM_FALSE | CM_NORM))
#define find_ci(c) ((c) & 0x07)
#define is_cx_char(c) (c && (c == find_cm(c) + find_ci(c)))

/* monster_desc_aux_f3() flags. */
#define MDF_INDEF 0x01 /* Give an indefinite article (a ...). */
#define MDF_NUMBER 0x02 /* Give a number (10 ...). */
#define MDF_DEF 0x04 /* Give a definite article (the ...). */
#define MDF_YOUR 0x08 /* Give a possessive "article" (your ...). */
#define MDF_MANY 0x80 /* Not 1 object. */

/* monster_desc_aux_f3() special characters. */
#define MCI_PLURAL 0x04
#define MCI_ARTICLE 0x05


/* feature_desc_f2() flags. */
#define FDF_INDEF MDF_INDEF /* Give an indefinite article (a ...). */
#define FDF_DEF MDF_DEF /* Give a definite article (the ...). */
#define FDF_YOUR MDF_YOUR /* Give a possessive "article" (your ...). */
#define FDF_REAL 0x40 /* Describe this feature rather than the one it mimics. */
#define FDF_MANY MDF_MANY /* Not 1 feature. */

/*
 * Store constants
 */
#define STORE_INVEN_MAX 24      /* Max number of discrete objs in inven */
#define STORE_CHOICES   48      /* Number of items to choose stock from */
#define STORE_OBJ_LEVEL 5       /* Magic Level for normal stores */
#define STORE_TURNOVER  9       /* Normal shop turnover, per day */
#define STORE_MIN_KEEP  6       /* Min slots to "always" keep full */
#define STORE_MAX_KEEP  18      /* Max slots to "always" keep full */
#define STORE_SHUFFLE   21      /* 1/Chance (per day) of an owner changing */
#define STORE_TURNS     1000    /* Number of turns between turnovers */


/*
 * object_desc() flags.
 */
#define OD_ART 0x01 /* Display article/quantity if one is relevant. */
#define OD_SHOP 0x02 /* Display as in shop, hiding various things. */
#define OD_NOHIDE 0x04 /* Don't allow hidden objects. */

/*
 * Misc constants
 */
#define TOWN_DAWN         10000 /* Number of turns from dawn to dawn XXX */
#define BREAK_GLYPH         550 /* Rune of protection resistance */
#define BREAK_MINOR_GLYPH    99 /* For explosive runes */
#define BTH_PLUS_ADJ          3 /* Adjust BTH per plus-to-hit */
#define MONSTER_MULT_ADJ      8 /* High value slows multiplication */
#define USE_DEVICE            3 /* x> Harder devices x< Easier devices     */

#define BIAS_ELEC 1                     /* "Biases" for random artifact gen */
#define BIAS_POIS 2
#define BIAS_FIRE 3
#define BIAS_COLD 4
#define BIAS_ACID 5
#define BIAS_STR 6
#define BIAS_INT 7
#define BIAS_WIS 8
#define BIAS_DEX 9
#define BIAS_CON 10
#define BIAS_CHR 11
#define BIAS_CHAOS 12
#define BIAS_PRIESTLY 13
#define BIAS_NECROMANTIC 14
#define BIAS_LAW 15
#define BIAS_ROGUE 16
#define BIAS_MAGE 17
#define BIAS_WARRIOR 18
#define BIAS_RANGER 19

/*
 * There is a 1/20 (5%) chance of inflating the requested object_level
 * during the creation of an object (see "get_obj_num()" in "object.c").
 * Lower values yield better objects more often.
 */
#define GREAT_OBJ       20

/*
 * There is a 1/50 (2%) chance of inflating the requested monster_level
 * during the creation of a monsters (see "get_mon_num()" in "monster.c").
 * Lower values yield harder monsters more often.
 */
#define NASTY_MON       50              /* 1/chance of inflated monster level */



/*
 * Option sets
 */
#define OPTS_CHEAT 0 /* Cheating Options */
#define OPTS_UI 1 /* User Interface Options */
#define OPTS_DISTURB 2 /* Disturbance Options */
#define OPTS_MON 3 /* Creature Options */
#define OPTS_OBJ 4 /* Object Options */
#define OPTS_PERF 5 /* Performance Options */
#define OPTS_MISC 6 /* Miscellaneous Options */
#define OPTS_BIRTH 7 /* Birth Options (can be set) */
#define OPTS_SPOIL 8 /* Spoiler Options */
#define OPTS_BIRTHR 9 /* Birth Options (are read) */
#define OPTS_DISPLAY 10 /* Display option. */

#define OPTS_MAX 11

/* Special option sets which are not handled by do_cmd_options_aux(). */
#define OPTS_SAVE -3
#define OPTS_WINDOW -4
#define OPTS_REDRAW -5 /* Co-ordinates of redraw_stuff() things. */
#define OPTS_MACRO -6
#define OPTS_VISUAL -7
#define OPTS_COLOUR -8
#define OPTS_SQUELCH -9
#define OPTS_TO_FILE -10
#define OPTS_FROM_FILE -11
#define OPTS_ALL_TO_FILE -12
#define OPTS_HELP -13
#define OPTS_INSCRIBE -14

/* Maximum number of options in a do_cmd_options_aux() option set. */
#define MAX_OPTS_PER_PAGE 24

#define NOSCORE_BORG 0x00F0 /* Borg mode */

#define NOSCORE_WIZARD 0x000F /* World-changing cheat commands. */
#define NOSCORE_CHEAT 0xFF00 /* Knowledge based cheat commands. */

#define NOSCORE_CHEAT_ALL (NOSCORE_WIZARD | NOSCORE_CHEAT) /* Cheat options. */
#define NOSCORE_NO_BONES (NOSCORE_WIZARD | NOSCORE_BORG) /* Bones-suppression */


/* Squelch settings. */
#define HIDE_NONE    0
#define HIDE_V_BAD 1
#define HIDE_CURSED 2
#define HIDE_AVERAGE 3
#define HIDE_GOOD 4
#define HIDE_V_GOOD 5
#define HIDE_ALL  6
#define HIDE_CATS 7

/*
 * Refueling constants
 */
#define FUEL_TORCH      5000    /* Maximum amount of fuel in a torch */
#define FUEL_LAMP       15000   /* Maximum amount of fuel in a lantern */


/*
 * More maximum values
 */
#define MAX_SIGHT       20      /* Maximum view distance */
#define MAX_RANGE       18      /* Maximum range (spells, etc) */



/*
 * There is a 1/160 chance per round of creating a new monster
 */
#define MAX_M_ALLOC_CHANCE      160

/*
 * Normal levels get at least 14 monsters
 */
#define MIN_M_ALLOC_LEVEL       14

/*
 * The town starts out with 4 residents during the day
 */
#define MIN_M_ALLOC_TD          4

/*
 * The town starts out with 8 residents during the night
 */
#define MIN_M_ALLOC_TN          8


/*
 * A monster can only "multiply" (reproduce) if there are fewer than 100
 * monsters on the level capable of such spontaneous reproduction.  This
 * is a hack which prevents the "m_list[]" array from exploding due to
 * reproducing monsters.  Messy, but necessary.
 */
#define MAX_REPRO       100


/*
 * Player "food" crucial values
 */
#define PY_FOOD_MAX             15000   /* Food value (Bloated) */
#define PY_FOOD_FULL    10000   /* Food value (Normal) */
#define PY_FOOD_ALERT   2000    /* Food value (Hungry) */
#define PY_FOOD_WEAK    1000    /* Food value (Weak) */
#define PY_FOOD_FAINT   500             /* Food value (Fainting) */
#define PY_FOOD_STARVE  100             /* Food value (Starving) */

/*
 * Player regeneration constants
 */
#define PY_REGEN_NORMAL         197     /* Regen factor*2^16 when full */
#define PY_REGEN_WEAK           98      /* Regen factor*2^16 when weak */
#define PY_REGEN_FAINT          33      /* Regen factor*2^16 when fainting */
#define PY_REGEN_HPBASE         1442    /* Min amount hp regen*2^16 */
#define PY_REGEN_MNBASE         524     /* Min amount mana regen*2^16 */

#define MAX_SCHOOL          4

/* Spirit 'Spheres' */
#define MAX_SPHERE 2
#define MAX_SPIRITS 8 /* (MAX_SPHERE * 4) */
#define SPIRIT_LIFE 0
#define SPIRIT_NATURE 1

/* Spells per "book". Fixed as the spells used are a u32b bit map. */
#define MAX_SPELLS_PER_BOOK 32

/* A list of the various books, etc., which contain spells. */
#define BK_SORC_0 0
#define BK_SORC_1 1
#define BK_SORC_2 2
#define BK_SORC_3 3
#define BK_NECRO_0 4
#define BK_NECRO_1 5
#define BK_NECRO_2 6
#define BK_NECRO_3 7
#define BK_THAUM_0 8
#define BK_THAUM_1 9
#define BK_THAUM_2 10
#define BK_THAUM_3 11
#define BK_CONJ_0 12
#define BK_CONJ_1 13
#define BK_CONJ_2 14
#define BK_CONJ_3 15
#define BK_CHARM_SULPHUR 16
#define BK_CHARM_HEMLOCK 17
#define BK_CHARM_UNICORN 18
#define BK_CHARM_CRYSTAL 19
#define BK_CHARM_AGARIC 20
#define BK_CHARM_GARLIC 21
#define BK_CHARM_GEODE 22
#define BK_LIFE_0 23
#define BK_LIFE_1 24
#define BK_LIFE_2 25
#define BK_LIFE_3 26
#define BK_WILD_0 27
#define BK_WILD_1 28
#define BK_WILD_2 29
#define BK_WILD_3 30
#define BK_MIND 31

#define MAX_BK 32

/*
 * Maximum number of "normal" pack slots, and the index of the "overflow"
 * slot, which can hold an item, but only temporarily, since it causes the
 * pack to "overflow", dropping the "last" item onto the ground.  Since this
 * value is used as an actual slot, it must be less than "INVEN_WIELD" (below).
 * Note that "INVEN_PACK" is probably hard-coded by its use in savefiles, and
 * by the fact that the screen can only show 23 items plus a one-line prompt.
 */
#define INVEN_PACK              23

/*
 * Indexes used for various "equipment" slots (hard-coded by savefiles, etc).
 */
#define INVEN_NONE -1 /* Return code for wield_slot() */
#define INVEN_WIELD             24
#define INVEN_BOW       25
#define INVEN_LEFT      26
#define INVEN_RIGHT     27
#define INVEN_NECK      28
#define INVEN_LITE      29
#define INVEN_BODY      30
#define INVEN_OUTER     31
#define INVEN_ARM       32
#define INVEN_HEAD      33
#define INVEN_HANDS     34
#define INVEN_FEET      35
#define INVEN_POUCH_1    36
#define INVEN_POUCH_2    37
#define INVEN_POUCH_3    38
#define INVEN_POUCH_4    39
#define INVEN_POUCH_5    40
#define INVEN_POUCH_6    41

/*
 * Total number of inventory slots (hard-coded).
 */
#define INVEN_TOTAL     42


/*
 * A "stack" of items is limited to less than 100 items (hard-coded).
 */
#define MAX_STACK_SIZE                  100

/*
 * Number of u16b variables available for the savefile version.
 */
#define MAX_SF_VAR 2

/*
 * Indexes of the various "stats" (hard-coded by savefiles, etc).
 */
#define A_STR   0
#define A_INT   1
#define A_WIS   2
#define A_DEX   3
#define A_CON   4
#define A_CHR   5

/* Total number of "stats" */
#define A_MAX 6

/*
 * Maximum number of default stat sets allowed
 */
#define MAX_STAT_DEFAULT ((u16b)(65535/sizeof(stat_default_type)))

/* Hack - stat set 0 is the universal default */
#define DEFAULT_STATS 0

/* Generate 3 items for each race and template at the start of the game. */
#define MAX_RACE_ITEMS 3
#define MAX_TPL_ITEMS 3

/*
 * Player sex constants (hard-coded by save-files, arrays, etc)
 */
#define SEX_FEMALE              0
#define SEX_MALE                1

/* Flags for player_race.eat. */
#define EAT_NORMAL 1 /* Full nutrition from eating. */
#define EAT_VAMPIRE 10 /* 1/10 nutrition. */
#define EAT_UNDEAD 20 /* 1/20 nutrition. */
#define EAT_SKELETON 0 /* No nutrition from eating, may break potions. */

#define RACE_BLANK 0 /* Leaves a bones file which has no racial flags. */
#define RACE_UNDEAD 1 /* Never leaves a bones file. Prefers night. */
#define RACE_ORC 2 /* Can leave an orc bones file. */
#define RACE_TROLL 3 /* Can leave a troll bones file. */

#define RP_BROO PO_RACIAL+1
#define RP_CYCLOPS PO_RACIAL+2
#define RP_DARK_ELF PO_RACIAL+3
#define RP_DRACONIAN PO_RACIAL+4
#define RP_GNOME PO_RACIAL+5
#define RP_GREAT PO_RACIAL+6
#define RP_GREAT_2 PO_RACIAL+7
#define RP_HALF_GIANT PO_RACIAL+8
#define RP_HALF_TITAN PO_RACIAL+9
#define RP_HALF_TROLL PO_RACIAL+10
#define RP_HOBBIT PO_RACIAL+11
#define RP_IMP PO_RACIAL+12
#define RP_KLACKON PO_RACIAL+13
#define RP_KOBOLD PO_RACIAL+14
#define RP_MIND_FLAYER PO_RACIAL+15
#define RP_SPRITE PO_RACIAL+16
#define RP_VAMPIRE PO_RACIAL+17
#define RP_YEEK PO_RACIAL+18

/*** Screen Locations ***/

/*
 * Some screen locations for various display routines
 */

/* Constants to define how long a few of the xtra1.c prt_*() functions are. */
#define COL_END     12 /* Last character in left border */
#define BORDER_WIDTH 12 /* The length of a border string. */

/* Pointers to various on-screen displays handled by redraw_stuff(). */
#define XY_TIME 0 /* 12:34 10 Jan */
#define XY_GOLD 1 /* "AU xxxxxxxxx" */
#define XY_EQUIPPY 2 /* equippy chars */
#define XY_STAT 3 /* "xxx:  xxxxxx" */
#define XY_AC 9 /* "AC:    xxxxx" */
#define XY_HP 10 /* "HP: xxx/yyy, etc." */
#define XY_SP 11 /* "SP: xxx/yyy, etc." */
#define XY_CHI 12 /* "CH: xxx/yyy, etc." */
#define XY_LIFE_SPIRIT 13 /* "Life: a c e g"*/
#define XY_WILD_SPIRIT 14 /* "Wild: b d f h"*/
#define XY_INFO 15 /* "xxxxxxxxxxxx" (monster info) */
#define XY_ENERGY 16 /* LE: xxx */
#define XY_CUT 17 /* <cut> */
#define XY_STUN 18 /* <stun> */
#define XY_HUNGRY 19 /* "Weak" / "Hungry" / "Full" / "Gorged" */
#define XY_BLIND 20 /* "Blind" */
#define XY_CONFUSED 21 /* "Confused" */
#define XY_AFRAID 22 /* "Afraid" */
#define XY_POISONED 23 /* "Poisoned" */
#define XY_STATE 24 /* <state> */
#define XY_SPEED 25 /* "Slow (-NN)" or "Fast (+NN)" */
#define XY_STUDY 26 /* "Study" */
#define XY_DEPTH 27 /* "Lev NNN" / "NNNN ft" */
#define XY_PARALYSED 28 /* Paralysed (also STATE) */
#define XY_IMAGE 29 /* Hallucinating */
#define XY_FAST 30 /* Faster */
#define XY_SLOW 31 /* Slower */
#define XY_SHIELD 32 /* Stone */
#define XY_BLESSED 33 /* Blessed */
#define XY_HERO 34 /* Heroic */
#define XY_BERSERK 35 /* Berserk */
#define XY_PROTEVIL 36 /* ProtEvil */
#define XY_WRAITH 37 /* Wraith */
#define XY_INVULN 38 /* Invulnerable */
#define XY_ESP 39 /* ESP */
#define XY_INVIS 40 /* SeeInvisible */
#define XY_INFRA 41 /* Infravision */
#define XY_RACID 42 /* Acid */
#define XY_RELEC 43 /* Elec */
#define XY_RFIRE 44 /* Fire */
#define XY_RCOLD 45 /* Cold */
#define XY_RPOIS 46 /* Pois */

/* The size of the screen_coords[] array. */
#define NUM_SCREEN_COORDS 47

/*
 * The boundaries of the map.
 */
#define PRT_MINX (COL_END+1)
#define PRT_MAXX (Term->wid-1)
#define PRT_MINY (1)
#define PRT_MAXY (Term->hgt-1)
#define ROW_MAP (1)
#define COL_MAP (COL_END+1)



/* Handle the CHECK_ARRAYS information for an array. */
#ifdef CHECK_ARRAYS
#define IDX(idx) idx,
#else /* CHECK_ARRAYS */
#define IDX(idx)
#endif /* CHECK_ARRAYS */

/*
 * Some constants for the "learn" code
 *
 * Most of these come from the "SM_xxx" flags
 */
#define DRS_FREE	14
#define DRS_MANA	15
#define DRS_RES_ACID	16
#define DRS_RES_ELEC	17
#define DRS_RES_FIRE	18
#define DRS_RES_COLD	19
#define DRS_RES_POIS	20
#define DRS_RES_FEAR	21
#define DRS_RES_LITE	22
#define DRS_RES_DARK	23
#define DRS_RES_BLIND	24
#define DRS_RES_CONFU	25
#define DRS_RES_SOUND	26
#define DRS_RES_SHARD	27
#define DRS_RES_NEXUS	28
#define DRS_RES_NETHR	29
#define DRS_RES_CHAOS	30
#define DRS_RES_DISEN	31
#define DRS_REFLECT     32



/*** Feature Indexes (see "lib/edit/f_info.txt") ***/

/* Nothing */
#define FEAT_NONE               0x00

/* Various */
#define FEAT_FLOOR              0x01
#define FEAT_INVIS              0x02
#define FEAT_GLYPH              0x03
#define FEAT_OPEN               0x04
#define FEAT_BROKEN             0x05
#define FEAT_LESS               0x06
#define FEAT_MORE               0x07
#define FEAT_PATH                0x08
#define FEAT_NONE_TD 0x09
#define FEAT_ILLEGAL 0x0A

/* Traps */
#define FEAT_TRAP_HEAD  0x10
#define FEAT_TRAP_DOOR (FEAT_TRAP_HEAD+0x00)
#define FEAT_TRAP_TAIL  0x1F

/* Doors */
#define FEAT_DOOR_HEAD  0x20
#define FEAT_DOOR_TAIL  0x2F

/* Extra */
#define FEAT_SECRET             0x30
#define FEAT_RUBBLE             0x31

/* Seams */
#define FEAT_MAGMA              0x32
#define FEAT_QUARTZ             0x33
#define FEAT_MAGMA_H    0x34
#define FEAT_QUARTZ_H   0x35
#define FEAT_MAGMA_K    0x36
#define FEAT_QUARTZ_K   0x37

/* Walls */
#define FEAT_WALL_EXTRA 0x38
#define FEAT_WALL_INNER 0x39
#define FEAT_WALL_OUTER 0x3A
#define FEAT_WALL_SOLID 0x3B
#define FEAT_PERM_EXTRA 0x3C
#define FEAT_PERM_BUILDING 0x3C
#define FEAT_PERM_INNER 0x3D
#define FEAT_PERM_OUTER 0x3E
#define FEAT_PERM_SOLID 0x3F
#define FEAT_MINOR_GLYPH 0x40
#define FEAT_PATTERN_START 0x41
#define FEAT_PATTERN_1  0x42
#define FEAT_PATTERN_2  0x43
#define FEAT_PATTERN_3  0x44
#define FEAT_PATTERN_4  0x45
#define FEAT_PATTERN_END 0x46
#define FEAT_PATTERN_OLD 0x47
#define FEAT_PATTERN_XTRA1 0x48
#define FEAT_PATTERN_XTRA2 0x49

/* Shops */
#define FEAT_SHOP_HEAD        0x4A
#define FEAT_SHOP_TAIL         0x55

/* Other Surface Stuff */
/* #define FEAT_GATE 0x60 */
#define FEAT_WATER 0x61
#define FEAT_TREE 0x62
#define FEAT_BUSH 0x63
#define FEAT_WILD_BORDER 0x64
#define FEAT_WATER_BORDER 0x65
#define FEAT_PATH_BORDER 0x66

#define LAST_FEAT FEAT_PATH_BORDER /* Highest used feature index. */

/*** Artifact indexes (see "lib/edit/a_info.txt") ***/


/* Lites */
#define ART_POLARIS 1
#define ART_XOTH 2
#define ART_TRAPEZOHEDRON 3

/* Amulets */
#define ART_LOBON 4
#define ART_ALHAZRED 5
/* #define ART_DWARVES 6 */

/* Rings */
#define ART_MAGIC 8
#define ART_BAST 9
#define ART_ELEMFIRE 10
#define ART_ELEMICE 11
#define ART_ELEMSTORM 12
#define ART_NYARLATHOTEP 13

/* Dragon Scale */
#define ART_RAZORBACK 16
#define ART_BLADETURNER 17

/* Hard Armour */
#define ART_SOULKEEPER 19
/* #define ART_GODS 20 */
/* #define ART_SERPENTS 21 */
#define ART_VAMPLORD 22
#define ART_ORCS 23
/* #define ART_HEARTGUARD 24 */
#define ART_OGRELORDS 25

/* Soft Armour */
/* #define ART_KOBOLD 27 */
/* #define ART_WYVERNSCALE 28 */

/* Shields */
/* #define ART_VITRIOL 30 */
/* #define ART_RAWHIDE 31 */
/* #define ART_STABILITY 32 */

/* Helms and Crowns */
/* #define ART_UNIVERSE 34 */
/* #define ART_MISERY 35 */
/* #define ART_MINDCRAFTER 36 */
/* #define ART_HOLINESS 37 */
/* #define ART_HAMMERHAND 38 */
#define ART_POWER 39
#define ART_SKULLKEEPER 40
#define ART_MASK 41
#define ART_SUN 42

/* Cloaks */
#define ART_BARZAI 44
#define ART_DARKNESS 45
#define ART_SWASHBUCKLER 46
/* #define ART_SHADE 47 */
#define ART_SHIFTER 48
#define ART_NYOGTHA 49
/* #define ART_SHOGGOTH 50 */

/* Gloves */
/* #define ART_CALFSKIN 52 */
#define ART_LIGHT 53
#define ART_IRONFIST 54
#define ART_GHOULS 55
#define ART_WHITESPARK 56
#define ART_DEAD 57
/* #define ART_THANOS 58 */
#define ART_COMBAT 59

/* Boots */
#define ART_ITHAQUA 60
#define ART_DANCING 61
/* #define ART_BLACKREAVER 62 */

/* Swords */
/* #define ART_DEFENCE 64 */
/* #define ART_ASSASSIN 65 */
#define ART_FAITH 66
#define ART_HOPE 67
#define ART_CHARITY 68
#define ART_THOTH 69
#define ART_ICICLE 70
/* #define ART_SELFSLAYER 71 */
/* #define ART_XURA 72 */
/* #define ART_BRIGHTBLADE 73 */
/* #define ART_LIGHTNING 74 */
/* #define ART_BLACKICE 75 */
/* #define ART_DRAGONSLAYER 76 */
/* #define ART_FIRETONGUE 77 */
/* #define ART_TWILIGHT 78 */
/* #define ART_BLACKBEARD 79 */
/* #define ART_GENOCIDE 80 */
/* #define ART_GROO 81 */
#define ART_STARLIGHT 82
#define ART_EVERFLAME 83
#define ART_KARAKAL 84
#define ART_DEMONBLADE 85
/* #define ART_MONTOYA 86 */
/* #define ART_BLUEBEARD 87 */
/* #define ART_STING 88 */
/* #define ART_SOULSWORD 89 */
/* #define ART_MERLIN 90 */
/* #define ART_DOOMCALLER 91 */
#define ART_VORPAL_BLADE 92

/* Polearms */
#define ART_THEODEN 93
/* #define ART_PAIN 94 */
/* #define ART_ARMOURBANE 95 */
/* #define ART_TEPES 96 */
#define ART_ODIN 97
#define ART_DESTINY 98
/* #define ART_HAGEN 99 */
/* #define ART_SKEWER 100 */
/* #define ART_YEEKS 101 */
#define ART_TROLLS 102
/* #define ART_NKAI 103 */
#define ART_SPLEENSLICER 104
/* #define ART_AXEDWARVES 105 */
/* #define ART_NODENS 106 */
/* #define ART_WRATH 107 */
#define ART_GNORRI 108
#define ART_GHARNE 109

/* The sword of the Dawn */
#define ART_DAWN 110

/* Hafted */
/* #define ART_WORLDS 111 */
#define ART_TOTILA 112
/* #define ART_THUNDERFIST 113 */
/* #define ART_BLOODSPIKE 114 */
#define ART_FIRESTAR 115
#define ART_THUNDER 116
/* #define ART_MJOLLNIR 117 */
/* #define ART_FIRESTAFF 118 */
#define ART_ERIRIL 119
#define ART_ATAL 120
/* #define ART_DEATHWREAKER 121 */
#define ART_JUSTICE 122

/* Bows */
/* #define ART_SURESHOT 124 */
/* #define ART_BOWSERPENTS 125 */
#define ART_DEATH 126

/* Another sword */
#define ART_STORMBRINGER 127


/*** Fixed Ego-Item indexes (see "lib/edit/e_info.txt") ***/

#define EGO_BRAND_FIRE 74
#define EGO_BRAND_COLD 75
#define EGO_BRAND_POIS 76
#define EGO_CHAOTIC 77
#define EGO_VAMPIRIC 96
#define EGO_PLANAR 98
#define EGO_FLAME 122
#define EGO_SHATTERED 126
#define EGO_BLASTED 127

/* Activation effects for random artifacts */
#define ACT_SUNLIGHT            1
#define ACT_BO_MISS_1           2
#define ACT_BA_POIS_1           3
#define ACT_BO_ELEC_1           4
#define ACT_BO_ACID_1           5
#define ACT_BO_COLD_1           6
#define ACT_BO_FIRE_1           7
#define ACT_BA_COLD_1           8
#define ACT_BA_FIRE_1           9
#define ACT_DRAIN_1             10
#define ACT_BA_COLD_2           11
#define ACT_BA_ELEC_2           12
#define ACT_DRAIN_2             13
#define ACT_VAMPIRE_1           14
#define ACT_BO_MISS_2           15
#define ACT_BA_FIRE_2           16
#define ACT_BA_COLD_3           17
#define ACT_BA_ELEC_3           18
#define ACT_WHIRLWIND           19
#define ACT_VAMPIRE_2           20
#define ACT_CALL_CHAOS          21
#define ACT_SHARD              22
#define ACT_DISP_EVIL           23
#define ACT_BA_MISS_3           24
#define ACT_DISP_GOOD           25
/* 26 - 50 unused */
#define ACT_CONFUSE             51
#define ACT_SLEEP               52
#define ACT_QUAKE               53
#define ACT_TERROR              54
#define ACT_TELE_AWAY           55
#define ACT_BANISH_EVIL         56
#define ACT_GENOCIDE            57
#define ACT_MASS_GENO           58
/* 59 - 64 unused */
#define ACT_CHARM_ANIMAL        65
#define ACT_CHARM_UNDEAD        66
#define ACT_CHARM_OTHER         67
#define ACT_CHARM_ANIMALS       68
#define ACT_CHARM_OTHERS        69
#define ACT_SUMMON_ANIMAL       70
#define ACT_SUMMON_PHANTOM      71
#define ACT_SUMMON_ELEMENTAL    72
#define ACT_SUMMON_DEMON        73
#define ACT_SUMMON_UNDEAD       74
/* 75 - 80 unused */
#define ACT_CURE_LW             81
#define ACT_CURE_MW             82
#define ACT_CURE_POISON         83
#define ACT_REST_LIFE           84
#define ACT_REST_ALL            85
#define ACT_CURE_700            86
#define ACT_CURE_1000           87
/* 88 - 90 unused */
#define ACT_ESP                 91
#define ACT_BERSERK             92
#define ACT_PROT_EVIL           93
#define ACT_RESIST_ALL          94
#define ACT_SPEED               95
#define ACT_XTRA_SPEED          96
#define ACT_WRAITH              97
#define ACT_INVULN              98
/* 99 - 110 unused */
#define ACT_LIGHT               111
#define ACT_MAP_LIGHT           112
#define ACT_DETECT_ALL          113
#define ACT_DETECT_XTRA         114
#define ACT_ID_FULL             115
#define ACT_ID_PLAIN            116
#define ACT_RUNE_EXPLO          117
#define ACT_RUNE_PROT           118
#define ACT_SATIATE             119
#define ACT_DEST_DOOR          120
#define ACT_STONE_MUD           121
#define ACT_RECHARGE            122
#define ACT_ALCHEMY             123
#define ACT_DIM_DOOR            124
#define ACT_TELEPORT            125
#define ACT_RECALL              126
/* 127 -> unused */
#define ACT_TELEPORT_WAIT 128

/*** Object "tval" and "k_idx" codes ***/


/*
 * The values for the "tval" field of various objects.
 *
 * This value is the primary means by which items are sorted in the
 * player inventory, followed by "k_idx" and "cost".
 *
 * Note that as of 2.7.8, the "item flags" apply to all items, though
 * only armor and weapons and a few other items use any of these flags.
 */

#define TV_SKELETON      1      /* Skeletons ('s') */
#define TV_BOTTLE                2      /* Empty bottles ('!') */
#define TV_JUNK          3      /* Sticks, Pottery, etc ('~') */
#define TV_SPIKE         5      /* Spikes ('~') */
#define TV_CHEST         7      /* Chests ('~') */
#define TV_SHOT                 16      /* Ammo for slings */
#define TV_ARROW        17      /* Ammo for bows */
#define TV_BOLT         18      /* Ammo for x-bows */
#define TV_BOW          19      /* Slings/Bows/Xbows */
#define TV_DIGGING      20      /* Shovels/Picks */
#define TV_HAFTED       21      /* Priest Weapons */
#define TV_POLEARM      22      /* Axes and Pikes */
#define TV_SWORD        23      /* Edged Weapons */
#define TV_BOOTS        30      /* Boots */
#define TV_GLOVES       31      /* Gloves */
#define TV_HELM         32      /* Helms */
#define TV_CROWN        33      /* Crowns */
#define TV_SHIELD       34      /* Shields */
#define TV_CLOAK        35      /* Cloaks */
#define TV_SOFT_ARMOR   36      /* Soft Armor */
#define TV_HARD_ARMOR   37      /* Hard Armor */
#define TV_DRAG_ARMOR   38      /* Dragon Scale Mail */
#define TV_LITE         39      /* Lites (including Specials) */
#define TV_AMULET       40      /* Amulets (including Specials) */
#define TV_RING         45      /* Rings (including Specials) */
#define TV_STAFF        55
#define TV_WAND         65
#define TV_ROD          66
#define TV_SCROLL       70
#define TV_POTION       75
#define TV_FLASK        77
#define TV_FOOD         80
#define TV_BOOK 90 /* Spellbooks */
#define TV_CHARM 94
#define TV_GOLD         100     /* Gold can only be picked up by players */
#define TV_UNKNOWN 255 /* Needed for o_base_type.tval. */

/* Various k_idx codes (see k_info.txt) */
#define OBJ_NOTHING 0
#define OBJ_NO_TEA 1
#define OBJ_ 2
#define OBJ_FOOD_POISON 3
#define OBJ_FOOD_BLINDNESS 4
#define OBJ_FOOD_PARANOIA 5
#define OBJ_FOOD_CONFUSION 6
#define OBJ_FOOD_HALLUCINATION 7
#define OBJ_FOOD_PARALYSIS 8
#define OBJ_FOOD_DEC_STR 9
#define OBJ_FOOD_SICKNESS 10
#define OBJ_FOOD_DEC_INT 11
#define OBJ_FOOD_DEC_WIS 12
#define OBJ_FOOD_UNHEALTH 13
#define OBJ_FOOD_DISEASE 14
#define OBJ_FOOD_CURE_POISON 15
#define OBJ_FOOD_CURE_BLINDNESS 16
#define OBJ_FOOD_CURE_PARANOIA 17
#define OBJ_FOOD_CURE_CONFUSION 18
#define OBJ_FOOD_CURE_SERIOUS 19
#define OBJ_FOOD_RES_STR 20
#define OBJ_FOOD_RES_CON 21
#define OBJ_FOOD_RESTORING 22
#define OBJ_HARD_BISCUIT 23
#define OBJ_PINT_OF_FINE_ALE 24
#define OBJ_BOTTLE_OF_FINE_WINE 25
#define OBJ_STRIP_OF_VENISON 26
#define OBJ_SLIME_MOULD 27
#define OBJ_RATION_OF_FOOD 28
#define OBJ_PIECE_OF_ELVISH_WAYBREAD 29
#define OBJ_BROKEN_DAGGER 30
#define OBJ_BROKEN_SWORD 31
#define OBJ_DAGGER 32
#define OBJ_MAIN_GAUCHE 33
#define OBJ_RAPIER 34
#define OBJ_SMALL_SWORD 35
#define OBJ_SABRE 36
#define OBJ_CUTLASS 37
#define OBJ_SHORT_SWORD 38
#define OBJ_TULWAR 39
#define OBJ_SCIMITAR 40
#define OBJ_BROAD_SWORD 41
#define OBJ_LONG_SWORD 42
#define OBJ_BASTARD_SWORD 43
#define OBJ_KATANA 44
#define OBJ_TWO_HANDED_SWORD 45
#define OBJ_EXECUTIONERS_SWORD 46
#define OBJ_BLADE_OF_CHAOS 47
#define OBJ_WHIP 48
#define OBJ_MACE 49
#define OBJ_QUARTERSTAFF 50
#define OBJ_BALL_AND_CHAIN 51
#define OBJ_WAR_HAMMER 52
#define OBJ_FLAIL 53
#define OBJ_LUCERNE_HAMMER 54
#define OBJ_MORNING_STAR 55
#define OBJ_LEAD_FILLED_MACE 56
#define OBJ_TWO_HANDED_FLAIL 57
#define OBJ_MACE_OF_DISRUPTION 58
#define OBJ_SPEAR 59
#define OBJ_TRIDENT 60
#define OBJ_LANCE 61
#define OBJ_BROAD_AXE 62
#define OBJ_BATTLE_AXE 63
#define OBJ_AWL_PIKE 64
#define OBJ_PIKE 65
#define OBJ_GLAIVE 66
#define OBJ_BEAKED_AXE 67
#define OBJ_HALBERD 68
#define OBJ_GREAT_AXE 69
#define OBJ_LOCHABER_AXE 70
#define OBJ_SCYTHE 71
#define OBJ_SCYTHE_OF_SLICING 72
#define OBJ_SHOVEL 73
#define OBJ_GNOMISH_SHOVEL 74
#define OBJ_DWARVEN_SHOVEL 75
#define OBJ_PICK 76
#define OBJ_ORCISH_PICK 77
#define OBJ_DWARVEN_PICK 78
#define OBJ_SLING 79
#define OBJ_SHORT_BOW 80
#define OBJ_LONG_BOW 81
#define OBJ_LIGHT_CROSSBOW 82
#define OBJ_HEAVY_CROSSBOW 83
#define OBJ_ARROW 84
#define OBJ_SEEKER_ARROW 85
#define OBJ_BOLT 86
#define OBJ_SEEKER_BOLT 87
#define OBJ_ROUNDED_PEBBLE 88
#define OBJ_IRON_SHOT 89
#define OBJ_FILTHY_RAG 90
#define OBJ_ROBE 91
#define OBJ_SOFT_LEATHER_ARMOUR 92
#define OBJ_SOFT_STUDDED_LEATHER 93
#define OBJ_HARD_LEATHER_ARMOUR 94
#define OBJ_HARD_STUDDED_LEATHER 95
#define OBJ_LEATHER_SCALE_MAIL 96
#define OBJ_METAL_SCALE_MAIL 97
#define OBJ_RUSTY_CHAIN_MAIL 98
#define OBJ_CHAIN_MAIL 99
#define OBJ_DOUBLE_CHAIN_MAIL 100
#define OBJ_AUGMENTED_CHAIN_MAIL 101
#define OBJ_BAR_CHAIN_MAIL 102
#define OBJ_METAL_BRIGANDINE_ARMOUR 103
#define OBJ_PARTIAL_PLATE_ARMOUR 104
#define OBJ_METAL_LAMELLAR_ARMOUR 105
#define OBJ_FULL_PLATE_ARMOUR 106
#define OBJ_RIBBED_PLATE_ARMOUR 107
#define OBJ_MITHRIL_CHAIN_MAIL 108
#define OBJ_MITHRIL_PLATE_MAIL 109
#define OBJ_ADAMANTITE_PLATE_MAIL 110
#define OBJ_DSM_BRONZE 111
#define OBJ_DSM_BLACK 112
#define OBJ_DSM_BLUE 113
#define OBJ_DSM_WHITE 114
#define OBJ_DSM_GOLD 115
#define OBJ_DSM_PSEUDO 116
#define OBJ_DSM_CHAOS 117
#define OBJ_DSM_GREEN 118
#define OBJ_DSM_LAW 119
#define OBJ_DSM_RED 120
#define OBJ_DSM_BALANCE 121
#define OBJ_DSM_MULTI_HUED 122
#define OBJ_DSM_POWER 123
#define OBJ_CLOAK 124
#define OBJ_SHADOW_CLOAK 125
#define OBJ_ELVEN_CLOAK 126
#define OBJ_SMALL_LEATHER_SHIELD 127
#define OBJ_SMALL_METAL_SHIELD 128
#define OBJ_LARGE_LEATHER_SHIELD 129
#define OBJ_LARGE_METAL_SHIELD 130
#define OBJ_SHIELD_OF_DEFLECTION 131
#define OBJ_DRAGON_SHIELD 132
#define OBJ_IRON_CROWN 133
#define OBJ_GOLDEN_CROWN 134
#define OBJ_JEWEL_ENCRUSTED_CROWN 135
#define OBJ_HARD_LEATHER_CAP 136
#define OBJ_METAL_CAP 137
#define OBJ_IRON_HELM 138
#define OBJ_STEEL_HELM 139
#define OBJ_DRAGON_HELM 140
#define OBJ_LEATHER_GLOVES 141
#define OBJ_GAUNTLETS 142
#define OBJ_CESTI 143
#define OBJ_SOFT_LEATHER_BOOTS 144
#define OBJ_HARD_LEATHER_BOOTS 145
#define OBJ_METAL_SHOD_BOOTS 146
#define OBJ_RING_WOE 147
#define OBJ_RING_AGGRAVATE_MONSTER 148
#define OBJ_RING_DEC_STR 149
#define OBJ_RING_DEC_INT 150
#define OBJ_RING_LEVITATION 151
#define OBJ_RING_TELEPORTATION 152
#define OBJ_RING_SLOW_DIGESTION 153
#define OBJ_RING_SEARCHING 154
#define OBJ_RING_RES_FIRE 155
#define OBJ_RING_RES_COLD 156
#define OBJ_RING_SEE_INVIS 157
#define OBJ_RING_SUSTAIN_CHR 158
#define OBJ_RING_SUSTAIN_INT 159
#define OBJ_RING_SUSTAIN_WIS 160
#define OBJ_RING_SUSTAIN_STR 161
#define OBJ_RING_SUSTAIN_CON 162
#define OBJ_RING_SUSTAIN_DEX 163
#define OBJ_RING_PROTECTION 164
#define OBJ_RING_ACID 165
#define OBJ_RING_FIRE 166
#define OBJ_RING_ICE 167
#define OBJ_RING_ACCURACY 168
#define OBJ_RING_DAMAGE 169
#define OBJ_RING_SLAYING 170
#define OBJ_RING_INC_STR 171
#define OBJ_RING_INC_INT 172
#define OBJ_RING_INC_DEX 173
#define OBJ_RING_INC_CON 174
#define OBJ_RING_RES_FEAR 175
#define OBJ_RING_FREE_ACTION 176
#define OBJ_RING_RES_CONFUSION 177
#define OBJ_RING_RES_NEXUS 178
#define OBJ_RING_RES_SHARD 179
#define OBJ_RING_RES_SOUND 180
#define OBJ_RING_RES_LIGHT_AND_DARKNESS 181
#define OBJ_RING_RES_BLINDNESS 182
#define OBJ_RING_RES_CHAOS 183
#define OBJ_RING_RES_NETHER 184
#define OBJ_RING_RES_DISENCHANTMENT 185
#define OBJ_RING_RES_POISON 186
#define OBJ_RING_SPEED 187
#define OBJ_RING_EXTRA_ATTACKS 188
#define OBJ_RING_LORDLY_PROTECTION 189
#define OBJ_AMULET_DOOM 190
#define OBJ_AMULET_ADORNMENT 191
#define OBJ_AMULET_SLOW_DIGESTION 192
#define OBJ_AMULET_TELEPORTATION 193
#define OBJ_AMULET_RES_ACID 194
#define OBJ_AMULET_BRILLIANCE 195
#define OBJ_AMULET_INC_CHR 196
#define OBJ_AMULET_SEARCHING 197
#define OBJ_AMULET_ANTI_TELEPORTATION 198
#define OBJ_AMULET_RESISTANCE 199
#define OBJ_AMULET_THE_MAGI 200
#define OBJ_AMULET_ANTI_MAGIC 201
#define OBJ_AMULET_REFLECTION 202
#define OBJ_SCROLL_DARKNESS 203
#define OBJ_SCROLL_AGGRAVATE_MONSTER 204
#define OBJ_SCROLL_CURSE_WEAPON 205
#define OBJ_SCROLL_CURSE_ARMOUR 206
#define OBJ_SCROLL_SUMMON_MONSTER 207
#define OBJ_SCROLL_SUMMON_UNDEAD 208
#define OBJ_SCROLL_TRAP_CREATION 209
#define OBJ_SCROLL_PHASE_DOOR 210
#define OBJ_SCROLL_TELEPORTATION 211
#define OBJ_SCROLL_TELEPORT_LEVEL 212
#define OBJ_SCROLL_WORD_OF_RECALL 213
#define OBJ_SCROLL_IDENTIFY 214
#define OBJ_SCROLL_STAR_IDENTIFY 215
#define OBJ_SCROLL_REMOVE_CURSE 216
#define OBJ_SCROLL_STAR_REMOVE_CURSE 217
#define OBJ_SCROLL_ENCHANT_ARMOUR 218
#define OBJ_SCROLL_ENCHANT_WEAPON_TO_HIT 219
#define OBJ_SCROLL_ENCHANT_WEAPON_TO_DAM 220
#define OBJ_SCROLL_STAR_ENCHANT_ARMOUR 221
#define OBJ_SCROLL_STAR_ENCHANT_WEAPON 222
#define OBJ_SCROLL_RECHARGING 223
#define OBJ_SCROLL_LIGHT 224
#define OBJ_SCROLL_MAGIC_MAPPING 225
#define OBJ_SCROLL_TREASURE_DETECTION 226
#define OBJ_SCROLL_OBJECT_DETECTION 227
#define OBJ_SCROLL_TRAP_DETECTION 228
#define OBJ_SCROLL_DOOR_STAIR_LOCATION 229
#define OBJ_SCROLL_DETECT_INVIS 230
#define OBJ_SCROLL_SATISFY_HUNGER 231
#define OBJ_SCROLL_BLESSING 232
#define OBJ_SCROLL_HOLY_CHANT 233
#define OBJ_SCROLL_HOLY_PRAYER 234
#define OBJ_SCROLL_MONSTER_CONFUSION 235
#define OBJ_SCROLL_PROTECTION_FROM_EVIL 236
#define OBJ_SCROLL_RUNE_OF_PROTECTION 237
#define OBJ_SCROLL_TRAP_DOOR_DESTRUCTION 238
#define OBJ_SCROLL_STAR_DESTRUCTION 239
#define OBJ_SCROLL_DISPEL_UNDEAD 240
#define OBJ_SCROLL_GENOCIDE 241
#define OBJ_SCROLL_MASS_GENOCIDE 242
#define OBJ_SCROLL_ACQUIREMENT 243
#define OBJ_SCROLL_STAR_ACQUIREMENT 244
#define OBJ_SCROLL_FIRE 245
#define OBJ_SCROLL_ICE 246
#define OBJ_SCROLL_CHAOS 247
#define OBJ_SCROLL_RUMOUR 248
#define OBJ_SCROLL_ARTIFACT_CREATION 249
#define OBJ_POTION_SLIME_MOULD_JUICE 250
#define OBJ_POTION_APPLE_JUICE 251
#define OBJ_POTION_WATER 252
#define OBJ_POTION_SLOWNESS 253
#define OBJ_POTION_SALT_WATER 254
#define OBJ_POTION_POISON 255
#define OBJ_POTION_BLINDNESS 256
#define OBJ_POTION_BOOZE 257
#define OBJ_POTION_SLEEP 258
#define OBJ_POTION_LOSE_MEMORIES 259
#define OBJ_POTION_RUINATION 260
#define OBJ_POTION_DEC_STR 261
#define OBJ_POTION_DEC_INT 262
#define OBJ_POTION_DEC_WIS 263
#define OBJ_POTION_DEC_DEX 264
#define OBJ_POTION_DEC_CON 265
#define OBJ_POTION_DEC_CHR 266
#define OBJ_POTION_IOCAINE 267
#define OBJ_POTION_DETONATIONS 268
#define OBJ_POTION_INFRA_VISION 269
#define OBJ_POTION_DETECT_INVIS 270
#define OBJ_POTION_SLOW_POISON 271
#define OBJ_POTION_NEUTRALIZE_POISON 272
#define OBJ_POTION_BOLDNESS 273
#define OBJ_POTION_SPEED 274
#define OBJ_POTION_RES_HEAT 275
#define OBJ_POTION_RES_COLD 276
#define OBJ_POTION_HEROISM 277
#define OBJ_POTION_BERSERK_STR 278
#define OBJ_POTION_CURE_LIGHT 279
#define OBJ_POTION_CURE_SERIOUS 280
#define OBJ_POTION_CURE_CRITICAL 281
#define OBJ_POTION_CURING 282
#define OBJ_POTION_HEALING 283
#define OBJ_POTION_STAR_HEALING 284
#define OBJ_POTION_LIFE 285
#define OBJ_POTION_RES_MANA 286
#define OBJ_POTION_RES_LIFE_LEVELS 287
#define OBJ_POTION_RES_STR 288
#define OBJ_POTION_RES_INT 289
#define OBJ_POTION_RES_WIS 290
#define OBJ_POTION_RES_DEX 291
#define OBJ_POTION_RES_CON 292
#define OBJ_POTION_RES_CHR 293
#define OBJ_POTION_INC_STR 294
#define OBJ_POTION_INC_INT 295
#define OBJ_POTION_INC_WIS 296
#define OBJ_POTION_INC_DEX 297
#define OBJ_POTION_INC_CON 298
#define OBJ_POTION_INC_CHR 299
#define OBJ_POTION_AUGMENTATION 300
#define OBJ_POTION_ENLIGHTENMENT 301
#define OBJ_POTION_STAR_ENLIGHTENMENT 302
#define OBJ_POTION_SELF_KNOWLEDGE 303
#define OBJ_POTION_EXPERIENCE 304
#define OBJ_POTION_RESISTANCE 305
#define OBJ_POTION_INVULNERABILITY 306
#define OBJ_POTION_NEW_LIFE 307
#define OBJ_WAND_HEAL_MONSTER 308
#define OBJ_WAND_HASTE_MONSTER 309
#define OBJ_WAND_CLONE_MONSTER 310
#define OBJ_WAND_TELEPORT_OTHER 311
#define OBJ_WAND_DISARMING 312
#define OBJ_WAND_TRAP_DOOR_DESTRUCTION 313
#define OBJ_WAND_STONE_TO_MUD 314
#define OBJ_WAND_LIGHT 315
#define OBJ_WAND_SLEEP_MONSTER 316
#define OBJ_WAND_SLOW_MONSTER 317
#define OBJ_WAND_CONFUSE_MONSTER 318
#define OBJ_WAND_SCARE_MONSTER 319
#define OBJ_WAND_TAME_MONSTER 320
#define OBJ_WAND_DRAIN_LIFE 321
#define OBJ_WAND_POLYMORPH 322
#define OBJ_WAND_MAGIC_MISSILE 323
#define OBJ_WAND_WONDER 324
#define OBJ_WAND_STINKING_CLOUD 325
#define OBJ_WAND_ACID_BOLT 326
#define OBJ_WAND_FIRE_BOLT 327
#define OBJ_WAND_COLD_BOLT 328
#define OBJ_WAND_ACID_BALL 329
#define OBJ_WAND_ELEC_BALL 330
#define OBJ_WAND_FIRE_BALL 331
#define OBJ_WAND_COLD_BALL 332
#define OBJ_WAND_ANNIHILATION 333
#define OBJ_WAND_DRAGON_FIRE 334
#define OBJ_WAND_DRAGON_COLD 335
#define OBJ_WAND_DRAGON_BREATH 336
#define OBJ_WAND_SHARD_BALL 337
#define OBJ_STAFF_DARKNESS 338
#define OBJ_STAFF_HASTE_MONSTERS 339
#define OBJ_STAFF_SUMMONING 340
#define OBJ_STAFF_TELEPORTATION 341
#define OBJ_STAFF_PERCEPTION 342
#define OBJ_STAFF_REMOVE_CURSE 343
#define OBJ_STAFF_STARLIGHT 344
#define OBJ_STAFF_LIGHT 345
#define OBJ_STAFF_ENLIGHTENMENT 346
#define OBJ_STAFF_TREASURE_LOCATION 347
#define OBJ_STAFF_OBJECT_LOCATION 348
#define OBJ_STAFF_TRAP_LOCATION 349
#define OBJ_STAFF_DOOR_STAIR_LOCATION 350
#define OBJ_STAFF_DETECT_INVIS 351
#define OBJ_STAFF_DETECT_EVIL 352
#define OBJ_STAFF_CURE_LIGHT 353
#define OBJ_STAFF_CURING 354
#define OBJ_STAFF_EARTHQUAKES 355
#define OBJ_STAFF_STAR_DESTRUCTION 356
#define OBJ_STAFF_SLOW_MONSTERS 357
#define OBJ_STAFF_SLEEP_MONSTERS 358
#define OBJ_STAFF_SPEED 359
#define OBJ_STAFF_SLOWNESS 360
#define OBJ_STAFF_DISPEL_EVIL 361
#define OBJ_STAFF_PROBING 362
#define OBJ_STAFF_GENOCIDE 363
#define OBJ_STAFF_POWER 364
#define OBJ_STAFF_THE_MAGI 365
#define OBJ_STAFF_HOLINESS 366
#define OBJ_STAFF_HEALING 367
#define OBJ_RUINED_CHEST 368
#define OBJ_SMALL_WOODEN_CHEST 369
#define OBJ_LARGE_WOODEN_CHEST 370
#define OBJ_SMALL_IRON_CHEST 371
#define OBJ_LARGE_IRON_CHEST 372
#define OBJ_SMALL_STEEL_CHEST 373
#define OBJ_LARGE_STEEL_CHEST 374
#define OBJ_IRON_SPIKE 375
#define OBJ_WOODEN_TORCH 376
#define OBJ_BRASS_LANTERN 377
#define OBJ_FLASK_OF_OIL 378
#define OBJ_EMPTY_BOTTLE 379
#define OBJ_ROD_TRAP_LOCATION 380
#define OBJ_ROD_DOOR_STAIR_LOCATION 381
#define OBJ_ROD_PERCEPTION 382
#define OBJ_ROD_RECALL 383
#define OBJ_ROD_ILLUMINATION 384
#define OBJ_ROD_ENLIGHTENMENT 385
#define OBJ_ROD_DETECTION 386
#define OBJ_ROD_PROBING 387
#define OBJ_ROD_CURING 388
#define OBJ_ROD_HEALING 389
#define OBJ_ROD_RESTORATION 390
#define OBJ_ROD_SPEED 391
#define OBJ_ROD_TELEPORT_OTHER 392
#define OBJ_ROD_DISARMING 393
#define OBJ_ROD_LIGHT 394
#define OBJ_ROD_SLEEP_MONSTER 395
#define OBJ_ROD_SLOW_MONSTER 396
#define OBJ_ROD_DRAIN_LIFE 397
#define OBJ_ROD_POLYMORPH 398
#define OBJ_ROD_ACID_BOLT 399
#define OBJ_ROD_ELEC_BOLT 400
#define OBJ_ROD_FIRE_BOLT 401
#define OBJ_ROD_COLD_BOLT 402
#define OBJ_ROD_ACID_BALL 403
#define OBJ_ROD_ELEC_BALL 404
#define OBJ_ROD_FIRE_BALL 405
#define OBJ_ROD_COLD_BALL 406
#define OBJ_ROD_HAVOC 407
#define OBJ_LUMP_OF_SULPHUR 408
#define OBJ_HEMLOCK_TWIG 409
#define OBJ_SILVER_UNICORN_HORN 410
#define OBJ_CRYSTAL 411
#define OBJ_FLY_AGARIC_TOADSTOOL 412
#define OBJ_CLOVE_OF_GARLIC 413
#define OBJ_GEODE 414
#define OBJ_SORCERY_BEGINNERS_HANDBOOK 415
#define OBJ_SORCERY_MASTER_SORCERERS_HANDBOOK 416
#define OBJ_SORCERY_RLYEH_TEXT 417
#define OBJ_SORCERY_UNAUSPRECHLICHEN_KULTEN 418
#define OBJ_CONJURATION_MINOR_CONJURINGS 419
#define OBJ_CONJURATION_CONJURING_MASTERY 420
#define OBJ_CONJURATION_BOOK_OF_EIBON 421
#define OBJ_CONJURATION_LIBER_IVONIS 422
#define OBJ_NECROMANCY_BLACK_PRAYERS 423
#define OBJ_NECROMANCY_BLACK_MASS 424
#define OBJ_NECROMANCY_NECRONOMICON 425
#define OBJ_NECROMANCY_KITAB_AL_AZIF 426
#define OBJ_THAUMATURGY_SIGN_OF_CHAOS 427
#define OBJ_THAUMATURGY_CHAOS_MASTERY 428
#define OBJ_THAUMATURGY_THE_KING_IN_YELLOW 429
#define OBJ_THAUMATURGY_REVELATIONS_OF_GLAAKI 430
#define OBJ_SHARD_OF_POTTERY 431
#define OBJ_BROKEN_STICK 432
#define OBJ_BROKEN_SKULL 433
#define OBJ_BROKEN_BONE 434
#define OBJ_RODENT_SKELETON 435
#define OBJ_CANINE_SKELETON 436
#define OBJ_GNOME_SKELETON 437
#define OBJ_ELF_SKELETON 438
#define OBJ_DWARF_SKELETON 439
#define OBJ_HUMAN_SKELETON 440
#define OBJ_COPPER 441
#define OBJ_COPPER_2 442
#define OBJ_COPPER_3 443
#define OBJ_SILVER 444
#define OBJ_SILVER_2 445
#define OBJ_SILVER_3 446
#define OBJ_GARNETS 447
#define OBJ_GARNETS_2 448
#define OBJ_GOLD 449
#define OBJ_GOLD_2 450
#define OBJ_GOLD_3 451
#define OBJ_OPALS 452
#define OBJ_SAPPHIRES 453
#define OBJ_RUBIES 454
#define OBJ_DIAMONDS 455
#define OBJ_EMERALDS 456
#define OBJ_MITHRIL 457
#define OBJ_ADAMANTITE 458
#define OBJ_STAR_ESSENCE_OF_POLARIS 459
#define OBJ_STAR_ESSENCE_OF_XOTH 460
#define OBJ_GEMSTONE_TRAPEZODEDRON 461
#define OBJ_AMULET_LOBON 462
#define OBJ_AMULET_ABD_ALHAZRED 463
#define OBJ_NECKLACE_OF_THE_DWARVES 464
#define OBJ_RING_MAGIC 465
#define OBJ_RING_BAST 466
#define OBJ_RING_ELEMENTAL_POWER_FIRE 467
#define OBJ_RING_ELEMENTAL_POWER_ICE 468
#define OBJ_RING_ELEMENTAL_POWER_STORM 469
#define OBJ_RING_NYARLATHOTEP 470
#define OBJ_RUNESWORD_STORMBRINGER 471
#define OBJ_MIGHTY_HAMMER_OF_WORLDS 472
#define OBJ_LEAD_CROWN_OF_THE_UNIVERSE 473

/* The lower bound of the user area of k_info. */
#define OBJ_MAX_DISTRO OBJ_LEAD_CROWN_OF_THE_UNIVERSE

/* A nicer name for the "unknown thing" object. */
#define OBJ_UNKNOWN OBJ_

/* Hack - the "stack" attr/char share a character. */
#define OBJ_STACK OBJ_NO_TEA

/* Hack - use the stack "object" to give the store restoration help. */
#define OBJ_FAKE_RESTORING OBJ_NO_TEA

/* extra info for chests (decimal) */
#define XT_CHEST_SMALL 10
/* #define XT_CHEST_LARGE 20 */

/* #define XT_CHEST_RUIN 0 */
/* #define XT_CHEST_WOOD 1 */
/* #define XT_CHEST_IRON 2 */
/* #define XT_CHEST_STEEL 3 */

#define chest_number(K_PTR) \
	(((K_PTR)->extra % 10) * 2)

/*
 * Charisma value used for price comparison. Gives an adj_chr_gold[] of 100%.
 */
#define OBJ_PRICE_COMPARE OBJ_NO_TEA
#define CHR_PRICE_COMPARE (18-3)

/*** General flag values ***/


/*
 * Special cave grid flags
 */
#define CAVE_MARK 0x0001 /* memorized feature */
#define CAVE_GLOW 0x0002 /* self-illuminating */
#define CAVE_ICKY 0x0004 /* part of a vault */
#define CAVE_ROOM 0x0008 /* part of a room */
#define CAVE_LITE 0x0010 /* lite flag */
#define CAVE_VIEW 0x0020 /* view flag */
#define CAVE_TEMP 0x0040 /* temp flag */
#define CAVE_XTRA 0x0080 /* misc flag (temporary?) */
#define CAVE_TRAP 0x0100 /* checked for traps */

/*
 * Start Points for surface levels
 * These need to fit in a byte, and real features are treated in a special
 * way, so an obviously invalid positive number is used for those which are
 * not features.
 */

#define START_WALK (LAST_FEAT+1) /* Player walked here */
#define START_RANDOM (LAST_FEAT+2) /* Player WoR'ed or fell here */
#define START_UP_STAIRS FEAT_LESS /* Player came down stairs */
#define START_DOWN_STAIRS FEAT_MORE /* Player came up stairs */

/*
 * Bit flags for the "project()" function
 *
 *   JUMP: Jump directly to the target location (this is a hack)
 *   BEAM: Work as a beam weapon (affect every grid passed through)
 *   THRU: Continue "through" the target (used for "bolts"/"beams")
 *   STOP: Stop as soon as we hit a monster (used for "bolts")
 *   GRID: Affect each grid in the "blast area" in some way
 *   ITEM: Affect each object in the "blast area" in some way
 *   KILL: Affect each monster in the "blast area" in some way
 *   HIDE: Hack -- disable "visual" feedback from projection
 */
#define PROJECT_JUMP    0x01
#define PROJECT_BEAM    0x02
#define PROJECT_THRU    0x04
#define PROJECT_STOP    0x08
#define PROJECT_GRID    0x10
#define PROJECT_ITEM    0x20
#define PROJECT_KILL    0x40
#define PROJECT_HIDE    0x80

/*
 * Bit flags for the "enchant()" function
 */
#define ENCH_TOHIT   0x01
#define ENCH_TODAM   0x02
#define ENCH_TOAC    0x04

/*
 * Bit flags for the "target_set" function XXX XXX XXX
 *
 *      KILL: Target monsters
 *      LOOK: Describe grid fully
 *      NONE: Don't build an "interesting" target list.
 */
#define TARGET_KILL             0x01
#define TARGET_LOOK             0x02
#define TARGET_NONE 0x04


/*
 * Bit flags for the "get_item" function
 */
#define USE_EQUIP	0x01	/* Allow equip items */
#define USE_INVEN	0x02	/* Allow inven items */
#define USE_FLOOR	0x04	/* Allow floor items */



/*** Player flags ***/


/*
 * Bit flags for the "p_ptr->notice" variable
 */
#define PN_COMBINE (1L<<0) /* Combine the pack */
#define PN_REORDER (1L<<1) /* Reorder the pack */
#define PN_ISQUELCH (1L<<2) /* Squelch the pack */
#define PN_FSQUELCH (1L<<3) /* Squelch the floor items */
/* xxx (many) */


/*
 * Bit flags for the "p_ptr->update" variable
 */
#define PU_BONUS        0x00000001L     /* Calculate bonuses */
#define PU_TORCH        0x00000002L     /* Calculate torch radius */
#define PU_MA_ARMOUR 0x00000004L  /* Calculate martial arts armour bonus. */
/* xxx (many) */
#define PU_HP           0x00000010L     /* Calculate chp and mhp */
#define PU_MANA         0x00000020L     /* Calculate csp and msp */
#define PU_SPELLS       0x00000040L     /* Calculate spells */
/* xxx (many) */
/* xxx (many) */
#define PU_UN_VIEW      0x00010000L     /* Forget view */
#define PU_UN_LITE      0x00020000L     /* Forget lite */
/* xxx (many) */
#define PU_VIEW         0x00100000L     /* Update view */
#define PU_LITE         0x00200000L     /* Update lite */
/* xxx */
#define PU_MONSTERS     0x01000000L     /* Update monsters */
#define PU_DISTANCE     0x02000000L     /* Update distances */
#define PU_ROOM 0x04000000L /* Update room map */
/* xxx */
#define PU_FLOW         0x10000000L     /* Update flow */
/* xxx (many) */
#define PU_QUIET 0x80000000L /* Give no messages */


/*
 * Bit flags for the "p_ptr->redraw" variable
 */
#define PR_TIMERS (1L<<0) /* Display various timers */
#define PR_STATS        0x00000010L     /* Display Stats */
#define PR_ARMOR        0x00000020L     /* Display Armor */
#define PR_HP           0x00000040L     /* Display Hitpoints */
#define PR_MANA         0x00000080L     /* Display Mana */
#define PR_GOLD         0x00000100L     /* Display Gold */
#define PR_DEPTH        0x00000200L     /* Display Depth */
#define PR_EQUIPPY      0x00000400L     /* Display equippy chars */
#define PR_HEALTH       0x00000800L     /* Display Health Bar */
#define PR_TIME         0x00008000L     /* Display Time */
#define PR_STATE        0x00100000L     /* Display Extra (State) */
#define PR_SPEED        0x00200000L     /* Display Extra (Speed) */
#define PR_STUDY        0x00400000L     /* Display Extra (Study) */
#define PR_SPIRIT  0x00800000L  /* Display Spirit Annoyance */
#define PR_ENERGY       0x01000000L     /* Display last turn's energy use */
#define PR_WIPE_1       0x02000000L     /* Wipe from row 1 */
#define PR_MAP          0x04000000L     /* Display Map */
#define PR_WIPE_0       0x08000000L     /* Wipe row 0. */
#define PR_PANEL        0x10000000L  /* Redraw the panel. */
/* xxx */
/* xxx */

/* A couple of more extensive redraw requests. */
#define PR_WIPE (PR_WIPE_1 | PR_WIPE_0)

#define PR_ALL \
	(PR_TIMERS | PR_STATE | PR_SPEED | PR_STUDY | PR_STATS | PR_GOLD | \
	PR_ARMOR | PR_HP | PR_MANA | PR_DEPTH | PR_HEALTH | PR_TIME | PR_WIPE | \
	PR_EQUIPPY | PR_SPIRIT | PR_ENERGY | PR_MAP)

/*
 * Bit flags for the "p_ptr->window" variable (etc)
 */
#define PW_INVEN (1L<<0) /* Display inven/equip */
#define PW_EQUIP (1L<<1) /* Display equip/inven */
#define PW_SPELL (1L<<2) /* Display spell list */
#define PW_PLAYER (1L<<3) /* Display character */
#define PW_VISIBLE (1L<<4) /* Display nearby monsters */
#define PW_PLAYER_SKILLS (1L<<5) /* Display skill list */
#define PW_MESSAGE (1L<<6) /* Display messages */
#define PW_OVERHEAD (1L<<7) /* Display overhead view */
#define PW_MONSTER (1L<<8) /* Display monster recall */
#define PW_OBJECT (1L<<9) /* Display object recall */
#define PW_OBJECT_DETAILS (1L<<10) /* Display object details */
#define PW_FLOOR (1L<<11) /* Display a list of objects on the floor. */
#define PW_SHOPS (1L<<12) /* Display shop information */
#define PW_HELP (1L<<13) /* Display context-sensitive help */
#define PW_KEYMAP (1L<<14) /* Display the current keymap */
/* xxx */
/* xxx */
#define PW_ROTATE (1L<<29) /* A "rotate windows" request. */
#define PW_NONE (1L<<30) /* A blank screen. */
#define PW_RETURN (1L<<31) /* A "something happened" flag for window_stuff. */

/* Count how many of the above displays there are (excluding PW_ROTATE,
 * PW_RETURN and PW_NONE). */
#define NUM_DISPLAY_FUNCS 15
#define DISPLAY_NONE NUM_DISPLAY_FUNCS /* "Hidden" index for PW_NONE. */

/* The set of windows affected by window_stuff(). */
#define WINDOW_STUFF_MASK (PW_INVEN | PW_EQUIP | PW_SPELL | PW_PLAYER | \
	PW_VISIBLE | PW_PLAYER_SKILLS | PW_MESSAGE | PW_OVERHEAD | PW_MONSTER | \
	PW_OBJECT | PW_OBJECT_DETAILS | PW_SHOPS | PW_HELP | PW_FLOOR | \
	PW_KEYMAP | PW_ROTATE | PW_RETURN)

/*
 * Bit flags for the update_object() function.
 */
#define OUP_FLOOR (1<<0) /* The object is on the floor. */
#define OUP_INVEN (1<<1) /* ... in the player's inventory. */
#define OUP_EQUIP (1<<2) /* ... equipped by the player. */
#define OUP_POUCH (1<<3) /* ... equipped in a pouch. */

/* Some useful combinations of the above flags. */
#define OUP_CARRIED_MASK (OUP_INVEN | OUP_EQUIP | OUP_POUCH)
/* #define OUP_EQUIPPED_MASK (OUP_EQUIP | OUP_POUCH) */
#define OUP_ALL (OUP_FLOOR | OUP_CARRIED_MASK)

/*** General index values ***/


/*
 * Legal restrictions for "summon_specific()"
 */
/* #define SUMMON_ALL 0 */
#define SUMMON_NO_UNIQUES 0x8000 /* Prevent unique summoning. */
#define SUMMON_BY_FLAG 0x4000 /* Check for a specific flag. */
#define SUMMON_BY_CHAR 0x2000 /* Check for the low byte as a symbol. */

/* Summon by d_char. */
#define SUMMON_CHAR(C) ((C) | SUMMON_BY_CHAR)
#define SUMMON_ANT        (SUMMON_CHAR('a') | SUMMON_NO_UNIQUES)
#define SUMMON_SPIDER     (SUMMON_CHAR('S') | SUMMON_NO_UNIQUES)
#define SUMMON_HYDRA      (SUMMON_CHAR('M') | SUMMON_NO_UNIQUES)
#define SUMMON_HI_DRAGON  SUMMON_CHAR('D')
#define SUMMON_IB         (SUMMON_CHAR('i') | SUMMON_NO_UNIQUES)
#define SUMMON_MOULD      (SUMMON_CHAR('m') | SUMMON_NO_UNIQUES)
#define SUMMON_BAT        (SUMMON_CHAR('b') | SUMMON_NO_UNIQUES)
#define SUMMON_QUYLTHULG  (SUMMON_CHAR('Q') | SUMMON_NO_UNIQUES)
#define SUMMON_VORTEX     (SUMMON_CHAR('v') | SUMMON_NO_UNIQUES)
#define SUMMON_TREASURE   (SUMMON_CHAR('$') | SUMMON_NO_UNIQUES)

/* Summon by a flag. */
#define SUMMON_FLAG(S,F) ((S)*32 | iilog(F) | SUMMON_BY_FLAG)
#define SUMMON_CTHULOID   (SUMMON_FLAG(3, RF3_CTHULOID) | SUMMON_NO_UNIQUES)
#define SUMMON_DEMON      (SUMMON_FLAG(3, RF3_DEMON) | SUMMON_NO_UNIQUES)
#define SUMMON_UNDEAD     (SUMMON_FLAG(3, RF3_UNDEAD) | SUMMON_NO_UNIQUES)
#define SUMMON_DRAGON     (SUMMON_FLAG(3, RF3_DRAGON) | SUMMON_NO_UNIQUES)
#define SUMMON_GOO        SUMMON_FLAG(3, RF3_GREAT_OLD_ONE)
#define SUMMON_UNIQUE     SUMMON_FLAG(1, RF1_UNIQUE)
#define SUMMON_ORC        (SUMMON_FLAG(3, RF3_ORC) | SUMMON_NO_UNIQUES)
#define SUMMON_ANIMAL     (SUMMON_FLAG(3, RF3_ANIMAL) | SUMMON_NO_UNIQUES)
#define SUMMON_ELEMENTAL  (SUMMON_FLAG(2, RF2_ELEMENTAL) | SUMMON_NO_UNIQUES)
#define SUMMON_MIMIC      (SUMMON_FLAG(2, RF2_MIMIC) | SUMMON_NO_UNIQUES)
#define SUMMON_PHANTOM    (SUMMON_FLAG(2, RF2_PHANTOM) | SUMMON_NO_UNIQUES)

/* Unusual summon types - see summon_specific_okay(). */
#define SUMMON_HOUND (0x0100 | SUMMON_NO_UNIQUES) /* CZ */
#define SUMMON_HI_UNDEAD (0x0101) /* LVW */
#define SUMMON_REAVER (0x0103 | SUMMON_NO_UNIQUES) /* Black reaver alone. */
#define SUMMON_ANIMAL_RANGER (0x0105 | SUMMON_NO_UNIQUES)
#define SUMMON_LIVING (0x0108 | SUMMON_NO_UNIQUES)
#define SUMMON_HI_DEMON (0x0110 | SUMMON_NO_UNIQUES)


/*
 * Spell types used by project(), and related functions.
 */
#define GF_ELEC         1
#define GF_POIS         2
#define GF_ACID         3
#define GF_COLD         4
#define GF_FIRE         5
#define GF_MISSILE      10
#define GF_ARROW        11
#define GF_PLASMA       12
/* Replaced with GF_HOLY_FIRE and GF_HELL_FIRE */
/* #define GF_HOLY_ORB     13 */
#define GF_WATER        14
#define GF_LITE         15
#define GF_DARK         16
#define GF_LITE_WEAK    17
#define GF_DARK_WEAK    18
#define GF_SHARDS       20
#define GF_SOUND        21
#define GF_CONFUSION    22
#define GF_FORCE        23
#define GF_INERTIA      24
#define GF_MANA         26
#define GF_METEOR       27
#define GF_ICE          28
#define GF_CHAOS        30
#define GF_NETHER       31
#define GF_DISENCHANT   32
#define GF_NEXUS        33
#define GF_TIME         34
#define GF_GRAVITY      35
#define GF_KILL_WALL    40
#define GF_KILL_DOOR    41
#define GF_KILL_TRAP    42
#define GF_MAKE_DOOR    46
#define GF_MAKE_TRAP    47
#define GF_OLD_CLONE    51
#define GF_OLD_POLY             52
#define GF_OLD_HEAL             53
#define GF_OLD_SPEED    54
#define GF_OLD_SLOW             55
#define GF_OLD_CONF             56
#define GF_OLD_SLEEP    57
#define GF_OLD_DRAIN    58
#define GF_AWAY_UNDEAD  61
#define GF_AWAY_EVIL    62
#define GF_AWAY_ALL     63
#define GF_TURN_UNDEAD  64
#define GF_TURN_EVIL    65
#define GF_TURN_ALL     66
#define GF_DISP_UNDEAD  67
#define GF_DISP_EVIL    68
#define GF_DISP_ALL 69
#define GF_DISP_DEMON   70      /* New types for Zangband begin here... */
#define GF_DISP_LIVING  71
/* #define GF_SHARD       72 */
#define GF_NUKE         73
#define GF_MAKE_GLYPH   74
#define GF_STASIS       75
#define GF_STONE_WALL   76
#define GF_DEATH_RAY    77
#define GF_STUN         78
#define GF_HOLY_FIRE    79
#define GF_HELL_FIRE    80
#define GF_DISINTEGRATE 81
#define GF_CHARM        82
#define GF_CONTROL_UNDEAD   83
#define GF_CONTROL_ANIMAL   84
#define GF_PSI         85
#define GF_PSI_DRAIN   86
#define GF_TELEKINESIS  87
#define GF_JAM_DOOR     88
#define GF_DOMINATION   89
#define GF_DISP_GOOD    90
#define GF_HIT 255 /* Fake attack type used in natural_attacks[]. */

/*
 * Distance at which pets follow the player
	*/
#define FOLLOW_DISTANCE 4




/*
 * Hack -- special ego item effects
 */
#define E_SPEC_NO_EGO 1 /* Remove ego flag on creation. */
#define E_SPEC_RANDART 2 /* Turn into a random artefact. */
#define E_SPEC_ABILITY 3 /* Add a random ability. */
#define E_SPEC_POWER 4 /* Add a random power. */
#define E_SPEC_SUSTAIN 5 /* Add a random sustain. */
#define E_SPEC_HIGH 6 /* Add a random high resistance. */
#define E_SPEC_RESIST 7 /* Add a random resistance. */
#define E_SPEC_LOW 8 /* Add a random low resistance. */

#define E_SPEC_PLANAR 10 /* Give flags as if it was a Planar weapon. */
#define E_SPEC_DF 11 /* ... a Defender weapon. */
#define E_SPEC_ELDER_SIGN 12 /* ... an Elder Sign Inscribed weapon. */
#define E_SPEC_SLAYING 13 /* ... a weapon of Slaying. */
#define E_SPEC_A_RESISTANCE 14 /* ... armour of Resistance. */
#define E_SPEC_S_RESISTANCE 15 /* ... a shield of Resistance. */
#define E_SPEC_SEEING 16 /* ... a helmet of Seeing. */
#define E_SPEC_KADATH 17 /* ... a weapon of Kadath. */
#define E_SPEC_SHARPNESS 18 /* ... a sword of Sharpness. */
#define E_SPEC_EARTHQUAKES 19 /* ... a club of Earthquakes. */
#define E_SPEC_DRAGON_BANE 20 /* ... a weapon of Dragon Bane. */
#define E_SPEC_LAW 21 /* ... a weapon of Law. */
#define E_SPEC_LENG 22 /* ... a weapon of Leng. */
#define E_SPEC_DIE 23 /* ... a pebble/arrow/bolt of slaying. */
#define E_SPEC_AM_RESISTANCE 24 /* ... an amulet of resistance. */
#define E_SPEC_AM_THE_MAGI 25 /* ... an amulet of the Magi. */
#define E_SPEC_RING_LORDLY 26 /* ... a ring of lordly protection. */
#define E_SPEC_RING_SPEED 27 /* ... a ring of speed. */
#define E_SPEC_RING_EXTRA_ATTACKS 28 /* ... a ring of extra attacks. */
#define E_SPEC_DRAGON_RESIST 29 /* ... a dragon helm/shield. */
#define E_SPEC_RNDPVAL 30 /* ... an elven cloak. */

/*** Object flag values ***/


/*
 * Chest trap flags (see "tables.c")
 */
#define CHEST_LOSE_STR          0x01
#define CHEST_LOSE_CON          0x02
#define CHEST_POISON            0x04
#define CHEST_PARALYZE          0x08
#define CHEST_EXPLODE           0x10
#define CHEST_SUMMON            0x20



/*
 * Special Object Flags
 */
#define IDENT_TOUCHED 0x0001 /* Item has been touched by the player. */
#define IDENT_FIXED             0x0002    /* Item has been "haggled" */
#define IDENT_EMPTY             0x0004    /* Item charges are known */
#define IDENT_KNOWN             0x0008    /* Item abilities are known */
#define IDENT_STOREB    0x0010    /* Item is storebought !!!! */
#define IDENT_MENTAL    0x0020    /* Item information is known */
#define IDENT_CURSED    0x0040    /* Item is temporarily cursed */
#define IDENT_BROKEN    0x0080    /* Item is permanently worthless */
#define IDENT_SENSE_CURSED 0x0100 /* Item has known (un)cursed status */
#define IDENT_SENSE_VALUE 0x0200 /* Item is known to be an artefact */
#define IDENT_SENSE_HEAVY 0x0400 /* Item has been pseudo-identified heavily */
#define IDENT_TRIED  0x0800 /* Item has been tried */
#define IDENT_STORE 0x1000 /* Item is in a shop */

/* If a monster fails to pick something up, it is marked as "powerful".
 * As it would take 2^n bits to record which types of monster had this problem
 * given n slays, just clear it when the player identifies the type or the
 * object. As iterating through every object for the "aware" case is hard,
 * store it and ignore it instead.
 */
#define IDENT_POWER_UNAWARE 0x2000
#define IDENT_POWER_AWARE 0x4000
#define IDENT_POWER_KNOWN (IDENT_POWER_UNAWARE | IDENT_POWER_AWARE)
#define IDENT_POWER_ALL \
	(IDENT_POWER_UNAWARE | IDENT_POWER_AWARE | IDENT_POWER_KNOWN)

#define IDENT_HIDDEN 0x8000 /* Item is hidden from view. */

/* Item has been pseudo-identified */
#define IDENT_SENSE (IDENT_SENSE_CURSED | IDENT_SENSE_VALUE)

/*
 * Object feelings.
 */
#define SENSE_NONE 0
#define SENSE_C_ART 1
#define SENSE_C_EGO 2
#define SENSE_CP_OBJ 3
#define SENSE_C_OBJ 4
#define SENSE_BROKEN 5
#define SENSE_U_OBJ 6
#define SENSE_G_OBJ 7
#define SENSE_GP_OBJ 8
#define SENSE_G_EGO 9
#define SENSE_G_ART 10
#define SENSE_EMPTY 11
#define SENSE_TRIED 12
#define SENSE_PCURSE 13
#define SENSE_Q_OBJ 14
#define SENSE_QP_OBJ 15
#define SENSE_Q_ART 16
#define SENSE_MAX 17


 /*
 * Some bit-flags for the "smart" field
 */
#define SM_OPP_ACID             0x00000001
#define SM_OPP_ELEC             0x00000002
#define SM_OPP_FIRE             0x00000004
#define SM_OPP_COLD             0x00000008
#define SM_OPP_POIS             0x00000010
/* #define SM_OPP_XXX1             0x00000020 */
#define SM_CLONED               0x00000040
#define SM_ALLY                 0x00000080
#define SM_IMM_REFLECT          0x00000100
/* #define SM_OPP_XXX6             0x00000200 */
#define SM_IMM_FREE             0x00000400
#define SM_IMM_MANA             0x80000800
#define SM_IMM_ACID             0x00001000
#define SM_IMM_ELEC             0x00002000
#define SM_IMM_FIRE             0x00004000
#define SM_IMM_COLD             0x00008000
#define SM_RES_ACID             0x00010000
#define SM_RES_ELEC             0x00020000
#define SM_RES_FIRE             0x00040000
#define SM_RES_COLD             0x00080000
#define SM_RES_POIS             0x00100000
#define SM_RES_FEAR             0x00200000
#define SM_RES_LITE             0x00400000
#define SM_RES_DARK             0x00800000
#define SM_RES_BLIND		0x01000000
#define SM_RES_CONFU            0x02000000
#define SM_RES_SOUND		0x04000000
#define SM_RES_SHARD		0x08000000
#define SM_RES_NEXUS		0x10000000
#define SM_RES_NETHR            0x20000000
#define SM_RES_CHAOS		0x40000000
#define SM_RES_DISEN		0x80000000
/* #define SM_IMM_XXX5          0x10000000 */


 /*
 * Special Monster Flags (all temporary)
 */
#define MFLAG_VIEW      0x01    /* Monster is in line of sight */
/* xxx */
#define MFLAG_BORN      0x10    /* Monster is still being born */
#define MFLAG_NICE      0x20    /* Monster is still being nice */
#define MFLAG_SHOW      0x40    /* Monster is recently memorized */
#define MFLAG_MARK      0x80    /* Monster is currently memorized */



/*
 * As of 2.7.8, the "object flags" are valid for all objects, and as
 * of 2.7.9, these flags are not actually stored with the object.
 *
 * Note that "flags1" contains all flags dependant on "pval" (including
 * stat bonuses, but NOT stat sustainers), plus all "extra attack damage"
 * flags (SLAY_XXX and BRAND_XXX).
 *
 * Note that "flags2" contains all "resistances" (including "Stat Sustainers",
 * actual immunities, and resistances).  Note that "Hold Life" is really an
 * "immunity" to ExpLoss, and "Free Action" is "immunity to paralysis".
 *
 * Note that "flags3" contains everything else -- including the three "CURSED"
 * flags, and the "BLESSED" flag, several "item display" parameters, some new
 * flags for powerful Bows, and flags which affect the player in a "general"
 * way (LITE, TELEPATHY, SEE_INVIS, SLOW_DIGEST, REGEN, FEATHER), including
 * all the "general" curses (TELEPORT, AGGRAVATE, EXP_DRAIN).  It also has
 * four new flags called "ITEM_IGNORE_XXX" which lets an item specify that
 * it can not be affected by various forms of destruction.  This is NOT as
 * powerful as actually granting resistance/immunity to the wearer.
 */

#define TR1_STR   0x00000001L  /* STR += "pval" */
#define TR1_INT   0x00000002L  /* INT += "pval" */
#define TR1_WIS   0x00000004L  /* WIS += "pval" */
#define TR1_DEX   0x00000008L  /* DEX += "pval" */
#define TR1_CON   0x00000010L  /* CON += "pval" */
#define TR1_CHR   0x00000020L  /* CHR += "pval" */
#define TR1_CHAOTIC  0x00000040L
#define TR1_VAMPIRIC 0x00000080L
#define TR1_STEALTH  0x00000100L  /* Stealth += "pval" */
#define TR1_SEARCH  0x00000200L  /* Search += "pval" */
#define TR1_INFRA  0x00000400L  /* Infra += "pval" */
#define TR1_TUNNEL  0x00000800L  /* Tunnel += "pval" */
#define TR1_SPEED  0x00001000L  /* Speed += "pval" */
#define TR1_BLOWS  0x00002000L  /* Blows += "pval" */
#define TR1_SHOTS 0x00004000L	/* Shots += "pval" */
#define TR1_MIGHT 0x00008000L	/* Might += "pval" */
#define TR1_SLAY_ANIMAL 0x00010000L
#define TR1_SLAY_EVIL 0x00020000L
#define TR1_SLAY_UNDEAD 0x00040000L
#define TR1_SLAY_DEMON 0x00080000L
#define TR1_SLAY_ORC 0x00100000L
#define TR1_SLAY_TROLL 0x00200000L
#define TR1_SLAY_GIANT 0x00400000L
#define TR1_SLAY_DRAGON 0x00800000L
#define TR1_KILL_DRAGON 0x01000000L  /* Execute Dragon */
#define TR1_X15_DRAGON 0x01800000L
#define TR1_VORPAL  0x02000000L  /* Later */
#define TR1_IMPACT  0x04000000L  /* Cause Earthquakes */
#define TR1_BRAND_POIS 0x08000000L
#define TR1_BRAND_ACID 0x10000000L
#define TR1_BRAND_ELEC 0x20000000L
#define TR1_BRAND_FIRE 0x40000000L
#define TR1_BRAND_COLD 0x80000000L

#define TR1_ALL_SLAY_DRAGON \
	(TR1_SLAY_DRAGON | TR1_KILL_DRAGON | TR1_X15_DRAGON)

#define TR2_SUST_STR 0x00000001L
#define TR2_SUST_INT 0x00000002L
#define TR2_SUST_WIS 0x00000004L
#define TR2_SUST_DEX 0x00000008L
#define TR2_SUST_CON 0x00000010L
#define TR2_SUST_CHR 0x00000020L
#define TR2_RAND_RESIST 0x00000040L /* Gives a random resistance */
#define TR2_RAND_POWER 0x00000080L /* Gives a random power */
#define TR2_IM_ACID  0x00000100L
#define TR2_IM_ELEC  0x00000200L
#define TR2_IM_FIRE  0x00000400L
#define TR2_IM_COLD  0x00000800L
#define TR2_RAND_EXTRA 0x00001000L /* Gives either a random resist or power */
#define TR2_REFLECT  0x00002000L /* Reflect 'bolts' */
#define TR2_FREE_ACT 0x00004000L /* Free Action */
#define TR2_HOLD_LIFE 0x00008000L /* Hold Life */
#define TR2_RES_ACID 0x00010000L
#define TR2_RES_ELEC 0x00020000L
#define TR2_RES_FIRE 0x00040000L
#define TR2_RES_COLD 0x00080000L
#define TR2_RES_POIS 0x00100000L
#define TR2_RES_FEAR 0x00200000L  /* Added for Zangband */
#define TR2_RES_LITE 0x00400000L
#define TR2_RES_DARK 0x00800000L
#define TR2_RES_BLIND 0x01000000L
#define TR2_RES_CONFU 0x02000000L
#define TR2_RES_SOUND 0x04000000L
#define TR2_RES_SHARDS 0x08000000L
#define TR2_RES_NETHER 0x10000000L
#define TR2_RES_NEXUS 0x20000000L
#define TR2_RES_CHAOS 0x40000000L
#define TR2_RES_DISEN 0x80000000L


#define TR3_SH_FIRE  0x00000001L  /* Immolation (Fire) */
#define TR3_SH_ELEC  0x00000002L  /* Electric Sheath */
#define TR3_SHOW_ARMOUR 0x00000004L  /* Always show AC */
#define TR3_AUTO_CURSE 0x00000008L  /* Item is self-cursing */
#define TR3_NO_TELE  0x00000010L  /* Anti-teleportation */
#define TR3_NO_MAGIC 0x00000020L  /* Anti-magic */
#define TR3_WRAITH  0x00000040L  /* Wraithform */
#define TR3_TY_CURSE 0x00000080L  /* The Ancient Curse */
#define TR3_EASY_KNOW 0x00000100L  /* Aware -> Known */
#define TR3_HIDE_TYPE 0x00000200L  /* Hide "pval" description */
#define TR3_SHOW_MODS 0x00000400L  /* Always show Tohit/Todam */
#define TR3_GOOD  0x00000800L  /* Hack - a "good" object. */
#define TR3_FEATHER  0x00001000L  /* Feather Falling */
#define TR3_LITE  0x00002000L  /* Permanent Light */
#define TR3_SEE_INVIS 0x00004000L  /* See Invisible */
#define TR3_TELEPATHY 0x00008000L  /* Telepathy */
#define TR3_SLOW_DIGEST 0x00010000L  /* Item slows down digestion */
#define TR3_REGEN  0x00020000L  /* Item induces regeneration */
#define TR3_XTRA_MIGHT 0x00040000L  /* Bows get extra multiplier */
#define TR3_XTRA_SHOTS 0x00080000L  /* Bows get extra shots */
#define TR3_IGNORE_ACID 0x00100000L  /* Item ignores Acid Damage */
#define TR3_IGNORE_ELEC 0x00200000L  /* Item ignores Elec Damage */
#define TR3_IGNORE_FIRE 0x00400000L  /* Item ignores Fire Damage */
#define TR3_IGNORE_COLD 0x00800000L  /* Item ignores Cold Damage */
#define TR3_ACTIVATE 0x01000000L  /* Item can be activated */
#define TR3_DRAIN_EXP 0x02000000L  /* Item drains Experience */
#define TR3_TELEPORT 0x04000000L  /* Item teleports player */
#define TR3_AGGRAVATE 0x08000000L  /* Item aggravates monsters */
#define TR3_BLESSED  0x10000000L  /* Item is Blessed */
#define TR3_CURSED  0x20000000L  /* Item is Cursed */
#define TR3_HEAVY_CURSE 0x40000000L  /* Item is Heavily Cursed */
#define TR3_PERMA_CURSE 0x80000000L  /* Item is Perma Cursed */

/* Many items ignore all four. */
#define TR3_IGNORE_ALL \
	(TR3_IGNORE_ACID | TR3_IGNORE_ELEC | TR3_IGNORE_FIRE | TR3_IGNORE_COLD)

/*
 * Hack -- flag set 1 -- mask for "pval-dependant" flags.
 * Note that all "pval" dependant flags must be in "flags1".
 */
#define TR1_PVAL_MASK   \
	(TR1_STR | TR1_INT | TR1_WIS | TR1_DEX | \
	TR1_CON | TR1_CHR | \
	TR1_STEALTH | TR1_SEARCH | TR1_INFRA | TR1_TUNNEL | \
	TR1_SPEED | TR1_BLOWS | TR1_SHOTS | TR1_MIGHT)




/* "Fake" object flags for calc_bonuses_object. */
#define TR0_TO_H (1L<<0) /* Bonus to hit chance. */
#define TR0_DIS_TO_H (1L<<1) /* Known bonus to hit chance. */
#define TR0_TO_D (1L<<2) /* Bonus to damage. */
#define TR0_DIS_TO_D (1L<<3) /* Known bonus to damage. */
#define TR0_AC (1L<<4) /* Modifier to AC. */
#define TR0_DIS_AC (1L<<5) /* Known base AC. */
#define TR0_DIS_TO_A (1L<<6) /* Known bonus to AC. */
#define TR0_SAVE (1L<<7) /* A direct saving throw bonus. */
#define TR0_NO_CUT (1L<<8) /* Immunity to cuts. */
#define TR0_NO_STUN (1L<<9) /* Immunity to stunning. */
#define TR0_RES_ELDRITCH (1L<<10) /* Resistance/immunity to sanity blasting. */
#define TR0_HURT_LIGHT (1L<<11) /* Take extra damage from light. */
#define TR0_IM_DARK (1L<<12) /* Immunity to dark attacks. */
#define TR0_HEAL_NETHER (1L<<13) /* Be healed by nether attacks. */

/* Move through walls, taking no damage if low on HP. */
#define TR0_WEAK_WRAITH (1L<<14)

#define TR0_SAVE_SK (1L<<16) /* A skill-based saving throw bonus. */
#define TR0_AC_SK (1L<<17) /* A skill-based AC bonus. */
#define TR0_SPEED_SK (1L<<18) /* A skill-based speed bonus. */
#define TR0_ILL_NORM (1L<<19) /* Cancel out race/template/mut chr mods. */

/* Get possible rewards for improving racial skill, and consider it when
 * choosing rewards. */
#define TR0_CHAOS (1L<<20)

/* Resist normal pattern damage, but wreck the pattern if you bleed on it. */
#define TR0_PATTERN (1L<<21)

#define TR0_PVAL_MASK \
	(TR0_TO_H | TR0_DIS_TO_H | TR0_TO_D | TR0_DIS_TO_D | TR0_AC | TR0_DIS_AC | \
	TR0_DIS_TO_A | TR0_SAVE)

/*** Monster blow constants ***/

/*
 * Only store the number of blow methods, as the details are stored in
 * blow_methods[].
 */
#define NUM_BLOW_METHODS 22

/* Blow method flags. */
#define RBF_TOUCH 0x01 /* Is affected by target's aura. */
#define RBF_WAKE 0x02 /* Always wakes monster target. */
#define RBF_CUT 0x04 /* Cuts player target. */
#define RBF_STUN 0x08 /* Stuns player target. */


/*
 * New monster blow effects
 */
#define RBE_HURT                1
#define RBE_POISON              2
#define RBE_UN_BONUS    3
#define RBE_UN_POWER    4
#define RBE_EAT_GOLD    5
#define RBE_EAT_ITEM    6
#define RBE_EAT_FOOD    7
#define RBE_EAT_LITE    8
#define RBE_ACID                9
#define RBE_ELEC                10
#define RBE_FIRE                11
#define RBE_COLD                12
#define RBE_BLIND               13
#define RBE_CONFUSE             14
#define RBE_TERRIFY             15
#define RBE_PARALYZE    16
#define RBE_LOSE_STR    17
#define RBE_LOSE_INT    18
#define RBE_LOSE_WIS    19
#define RBE_LOSE_DEX    20
#define RBE_LOSE_CON    21
#define RBE_LOSE_CHR    22
#define RBE_LOSE_ALL    23
#define RBE_SHATTER             24
#define RBE_EXP_10              25
#define RBE_EXP_20              26
#define RBE_EXP_40              27
#define RBE_EXP_80              28

/* Flag set identifiers. */
#define TR0 0 /* Special flag set for special purposes. */
#define TR1 1
#define TR2 2
#define TR3 3
#define RF1 4
#define RF2 5
#define RF3 6
#define RF4 7
#define RF5 8
#define RF6 9
#define SUMMON 10
#define DF 11
#define SHOP 12
#define MAX_FLAG_SETS 13


/*** Monster flag values (hard-coded) ***/


/*
 * New monster race bit flags
 */
#define RF1_UNIQUE          0x00000001      /* Unique Monster */
#define RF1_GUARDIAN        0x00000002      /* Level Guardian */
#define RF1_MALE            0x00000004      /* Male gender */
#define RF1_FEMALE          0x00000008      /* Female gender */
#define RF1_CHAR_CLEAR      0x00000010      /* Absorbs symbol */
#define RF1_CHAR_MULTI      0x00000020      /* Changes symbol */
#define RF1_ATTR_CLEAR      0x00000040      /* Absorbs color */
#define RF1_ATTR_MULTI      0x00000080      /* Changes color */
#define RF1_ALWAYS_GUARD    0x00000100      /* Start at "correct" depth */
#define RF1_FORCE_MAXHP     0x00000200      /* Start with max hitpoints */
#define RF1_FORCE_SLEEP     0x00000400      /* Start out sleeping */
#define RF1_FORCE_EXTRA     0x00000800      /* Start out something */
#define RF1_FRIEND          0x00001000      /* Arrive with a friend */
#define RF1_FRIENDS         0x00002000      /* Arrive with some friends */
#define RF1_ESCORT          0x00004000      /* Arrive with an escort */
#define RF1_ESCORTS         0x00008000      /* Arrive with some escorts */
#define RF1_NEVER_BLOW      0x00010000      /* Never make physical blow */
#define RF1_NEVER_MOVE      0x00020000      /* Never make physical move */
#define RF1_RAND_25         0x00040000      /* Moves randomly (25%) */
#define RF1_RAND_50         0x00080000      /* Moves randomly (50%) */
#define RF1_ONLY_GOLD       0x00100000      /* Drop only gold */
#define RF1_ONLY_ITEM       0x00200000      /* Drop only items */
#define RF1_DROP_60         0x00400000      /* Drop an item/gold (60%) */
#define RF1_DROP_90         0x00800000      /* Drop an item/gold (90%) */
#define RF1_DROP_1D2        0x01000000      /* Drop 1d2 items/gold */
#define RF1_DROP_2D2        0x02000000      /* Drop 2d2 items/gold */
#define RF1_DROP_3D2        0x04000000      /* Drop 3d2 items/gold */
#define RF1_DROP_4D2        0x08000000      /* Drop 4d2 items/gold */
#define RF1_DROP_GOOD       0x10000000      /* Drop good items */
#define RF1_DROP_GREAT      0x20000000      /* Drop great items */
#define RF1_DROP_USEFUL     0x40000000      /* Drop "useful" items */
#define RF1_DROP_CHOSEN     0x80000000      /* Drop "chosen" items */

/*
 * New monster race bit flags
 */
#define RF2_STUPID          0x00000001      /* Monster is stupid */
#define RF2_SMART           0x00000002      /* Monster is smart */
#define RF2_CAN_SPEAK       0x00000004      /* TY: can speak */
#define RF2_REFLECTING      0x00000008      /* Reflects bolts */
#define RF2_INVISIBLE       0x00000010      /* Monster avoids vision */
#define RF2_COLD_BLOOD      0x00000020      /* Monster avoids infra */
#define RF2_EMPTY_MIND      0x00000040      /* Monster avoids telepathy */
#define RF2_WEIRD_MIND      0x00000080      /* Monster avoids telepathy? */
#define RF2_MULTIPLY        0x00000100      /* Monster reproduces */
#define RF2_REGENERATE      0x00000200      /* Monster regenerates */
#define RF2_SHAPECHANGER    0x00000400      /* TY: shapechanger */
#define RF2_ATTR_ANY        0x00000800      /* TY: Attr_any */
#define RF2_POWERFUL        0x00001000      /* Monster has strong breath */
#define RF2_ELDRITCH_HORROR 0x00002000      /* Sanity-blasting horror    */
#define RF2_AURA_FIRE       0x00004000      /* Burns in melee */
#define RF2_AURA_ELEC       0x00008000      /* Shocks in melee */
#define RF2_OPEN_DOOR       0x00010000      /* Monster can open doors */
#define RF2_BASH_DOOR       0x00020000      /* Monster can bash doors */
#define RF2_PASS_WALL       0x00040000      /* Monster can pass walls */
#define RF2_KILL_WALL       0x00080000      /* Monster can destroy walls */
#define RF2_MOVE_BODY       0x00100000      /* Monster can move monsters */
#define RF2_KILL_BODY       0x00200000      /* Monster can kill monsters */
#define RF2_TAKE_ITEM       0x00400000      /* Monster can pick up items */
#define RF2_KILL_ITEM       0x00800000      /* Monster can crush items */
#define RF2_RUN_AWAY        0x01000000      /* Hit once, then run */
#define RF2_ELEMENTAL       0x02000000      /* Monster in an elemental spirit */
#define RF2_MIMIC           0x04000000      /* Monster is a mimic */
#define RF2_PHANTOM         0x08000000      /* Monster is a phantom */
#define RF2_CULTIST         0x10000000     /* Monster is a cultist */
#define RF2_SHAMAN          0x20000000      /* Monster is a shaman */
#define RF2_BRAIN_6         0x40000000
#define RF2_BRAIN_7         0x80000000

/*
 * New monster race bit flags
 */
#define RF3_ORC             0x00000001      /* Orc */
#define RF3_TROLL           0x00000002      /* Troll */
#define RF3_GIANT           0x00000004      /* Giant */
#define RF3_DRAGON          0x00000008      /* Dragon */
#define RF3_DEMON           0x00000010      /* Demon */
#define RF3_UNDEAD          0x00000020      /* Undead */
#define RF3_EVIL            0x00000040      /* Evil */
#define RF3_ANIMAL          0x00000080      /* Animal */
#define RF3_GREAT_OLD_ONE   0x00000100  /* TY: Great Old One */
#define RF3_GOOD            0x00000200      /* Good */
#define RF3_PLAYER_GHOST    0x00000400      /* Monster is a player ghost */
#define RF3_NONLIVING       0x00000800  /* TY: Non-Living (?) */
#define RF3_HURT_LITE       0x00001000      /* Hurt by lite */
#define RF3_HURT_ROCK       0x00002000      /* Hurt by rock remover */
#define RF3_HURT_FIRE       0x00004000      /* Hurt badly by fire */
#define RF3_HURT_COLD       0x00008000      /* Hurt badly by cold */
#define RF3_IM_ACID         0x00010000      /* Resist acid a lot */
#define RF3_IM_ELEC         0x00020000      /* Resist elec a lot */
#define RF3_IM_FIRE         0x00040000      /* Resist fire a lot */
#define RF3_IM_COLD         0x00080000      /* Resist cold a lot */
#define RF3_IM_POIS         0x00100000      /* Resist poison a lot */
#define RF3_RES_TELE        0x00200000      /* Resist teleportation */
#define RF3_RES_NETH        0x00400000      /* Resist nether a lot */
#define RF3_IM_WATER        0x00800000      /* Immune to water */
#define RF3_RES_PLAS        0x01000000      /* Resist plasma */
#define RF3_RES_NEXU        0x02000000      /* Resist nexus */
#define RF3_RES_DISE        0x04000000      /* Resist disenchantment */
#define RF3_CTHULOID        0x08000000      /* Cthuloid Entity */
#define RF3_NO_FEAR         0x10000000      /* Cannot be scared */
#define RF3_NO_STUN         0x20000000      /* Cannot be stunned */
#define RF3_NO_CONF         0x40000000      /* Cannot be confused */
#define RF3_NO_SLEEP        0x80000000      /* Cannot be slept */

/*
 * New monster race bit flags
 */
#define RF4_SHRIEK          0x00000001      /* Shriek for help */
#define RF4_XXX2            0x00000002      /* Takes an unusual article */
#define RF4_BOULDER         0x00000004      /* (?) */
#define RF4_BA_SHARD        0x00000008      /* Fire shard balls */
#define RF4_ARROW_1         0x00000010      /* Fire an arrow (light) */
#define RF4_ARROW_2         0x00000020      /* Fire an arrow (heavy) */
#define RF4_ARROW_3         0x00000040      /* Fire missiles (light) */
#define RF4_ARROW_4         0x00000080      /* Fire missiles (heavy) */
#define RF4_BR_ACID         0x00000100      /* Breathe Acid */
#define RF4_BR_ELEC         0x00000200      /* Breathe Elec */
#define RF4_BR_FIRE         0x00000400      /* Breathe Fire */
#define RF4_BR_COLD         0x00000800      /* Breathe Cold */
#define RF4_BR_POIS         0x00001000      /* Breathe Poison */
#define RF4_BR_NETH         0x00002000      /* Breathe Nether */
#define RF4_BR_LITE         0x00004000      /* Breathe Lite */
#define RF4_BR_DARK         0x00008000      /* Breathe Dark */
#define RF4_BR_CONF         0x00010000      /* Breathe Confusion */
#define RF4_BR_SOUN         0x00020000      /* Breathe Sound */
#define RF4_BR_CHAO         0x00040000      /* Breathe Chaos */
#define RF4_BR_DISE         0x00080000      /* Breathe Disenchant */
#define RF4_BR_NEXU         0x00100000      /* Breathe Nexus */
#define RF4_BR_TIME         0x00200000      /* Breathe Time */
#define RF4_BR_INER         0x00400000      /* Breathe Inertia */
#define RF4_BR_GRAV         0x00800000      /* Breathe Gravity */
#define RF4_BR_SHAR         0x01000000      /* Breathe Shards */
#define RF4_BR_PLAS         0x02000000      /* Breathe Plasma */
#define RF4_BR_WALL         0x04000000      /* Breathe Force */
#define RF4_BR_MANA         0x08000000      /* Breathe Mana */
#define RF4_BA_NUKE         0x10000000      /* TY: Nuke Ball */
#define RF4_BR_NUKE         0x20000000      /* TY: Toxic Breath */
#define RF4_BA_CHAO         0x40000000      /* TY: Chaos Ball */
#define RF4_BR_DISI         0x80000000      /* Breathe Disintegration */

/*
 * New monster race bit flags
 */
#define RF5_BA_ACID         0x00000001      /* Acid Ball */
#define RF5_BA_ELEC         0x00000002      /* Elec Ball */
#define RF5_BA_FIRE         0x00000004      /* Fire Ball */
#define RF5_BA_COLD         0x00000008      /* Cold Ball */
#define RF5_BA_POIS         0x00000010      /* Poison Ball */
#define RF5_BA_NETH         0x00000020      /* Nether Ball */
#define RF5_BA_WATE         0x00000040      /* Water Ball */
#define RF5_BA_MANA         0x00000080      /* Mana Storm */
#define RF5_BA_DARK         0x00000100      /* Darkness Storm */
#define RF5_DRAIN_MANA      0x00000200      /* Drain Mana */
#define RF5_MIND_BLAST      0x00000400      /* Blast Mind */
#define RF5_BRAIN_SMASH     0x00000800      /* Smash Brain */
#define RF5_CAUSE_1         0x00001000      /* Cause Light Wound */
#define RF5_CAUSE_2         0x00002000      /* Cause Serious Wound */
#define RF5_CAUSE_3         0x00004000      /* Cause Critical Wound */
#define RF5_CAUSE_4         0x00008000      /* Cause Mortal Wound */
#define RF5_BO_ACID         0x00010000      /* Acid Bolt */
#define RF5_BO_ELEC         0x00020000      /* Elec Bolt (unused) */
#define RF5_BO_FIRE         0x00040000      /* Fire Bolt */
#define RF5_BO_COLD         0x00080000      /* Cold Bolt */
#define RF5_BO_POIS         0x00100000      /* Poison Bolt (unused) */
#define RF5_BO_NETH         0x00200000      /* Nether Bolt */
#define RF5_BO_WATE         0x00400000      /* Water Bolt */
#define RF5_BO_MANA         0x00800000      /* Mana Bolt */
#define RF5_BO_PLAS         0x01000000      /* Plasma Bolt */
#define RF5_BO_ICEE         0x02000000      /* Ice Bolt */
#define RF5_MISSILE         0x04000000      /* Magic Missile */
#define RF5_SCARE           0x08000000      /* Frighten Player */
#define RF5_BLIND           0x10000000      /* Blind Player */
#define RF5_CONF            0x20000000      /* Confuse Player */
#define RF5_SLOW            0x40000000      /* Slow Player */
#define RF5_HOLD            0x80000000      /* Paralyze Player */


/*
 * New monster race bit flags
 */
#define RF6_HASTE           0x00000001      /* Speed self */
#define RF6_DREAD_CURSE     0x00000002      /* Dread Curse Of Azathoth */
#define RF6_HEAL            0x00000004      /* Heal self */
#define RF6_XXX2            0x00000008      /* Heal a lot (?) */
#define RF6_BLINK           0x00000010      /* Teleport Short */
#define RF6_TPORT           0x00000020      /* Teleport Long */
#define RF6_XXX3            0x00000040      /* Move to Player (?) */
#define RF6_S_ANIMAL        0x00000080      /* Move to Monster (?) */
#define RF6_TELE_TO         0x00000100      /* Move player to monster */
#define RF6_TELE_AWAY       0x00000200      /* Move player far away */
#define RF6_TELE_LEVEL      0x00000400      /* Move player vertically */
#define RF6_XXX4            0x00000800      /* Summon HI Demon (disabled) */
#define RF6_DARKNESS        0x00001000      /* Create Darkness */
#define RF6_TRAPS           0x00002000      /* Create Traps */
#define RF6_FORGET          0x00004000      /* Cause amnesia */
#define RF6_S_IB            0x00008000      /* ??? */
#define RF6_S_KIN           0x00010000      /* Summon "kin" */
#define RF6_S_REAVER        0x00020000      /* Summon Black Reavers! */
#define RF6_S_MONSTER       0x00040000      /* Summon Monster */
#define RF6_S_MONSTERS      0x00080000      /* Summon Monsters */
#define RF6_S_ANT           0x00100000      /* Summon Ants */
#define RF6_S_SPIDER        0x00200000      /* Summon Spiders */
#define RF6_S_HOUND         0x00400000      /* Summon Hounds */
#define RF6_S_HYDRA         0x00800000      /* Summon Hydras */
#define RF6_S_CTHULOID      0x01000000      /* Summon Angel */
#define RF6_S_DEMON         0x02000000      /* Summon Demon */
#define RF6_S_UNDEAD        0x04000000      /* Summon Undead */
#define RF6_S_DRAGON        0x08000000      /* Summon Dragon */
#define RF6_S_HI_UNDEAD     0x10000000      /* Summon Greater Undead */
#define RF6_S_HI_DRAGON     0x20000000      /* Summon Ancient Dragon */
#define RF6_S_GOO           0x40000000      /* Summon Great Old One */
#define RF6_S_UNIQUE        0x80000000      /* Summon Unique Monster */



/*
 * Hack -- choose "intelligent" spells when desperate
 */

#define RF4_INT_MASK \
	0L

#define RF5_INT_MASK \
	(RF5_HOLD | RF5_SLOW | RF5_CONF | RF5_BLIND | RF5_SCARE)

#define RF6_INT_MASK \
	(RF6_BLINK |  RF6_TPORT | RF6_TELE_LEVEL | RF6_TELE_AWAY | \
	RF6_HEAL | RF6_HASTE | RF6_TRAPS | RF6_S_IB | \
	RF6_S_KIN | RF6_S_REAVER | RF6_S_MONSTER | RF6_S_MONSTERS | \
	RF6_S_ANT | RF6_S_SPIDER | RF6_S_HOUND | RF6_S_HYDRA | \
	RF6_S_CTHULOID | RF6_S_DRAGON | RF6_S_UNDEAD | RF6_S_DEMON | \
	RF6_S_HI_DRAGON | RF6_S_HI_UNDEAD | RF6_S_GOO | RF6_S_UNIQUE)


/*
 * Hack -- "bolt" spells that may hurt fellow monsters
 */
#define RF4_BOLT_MASK \
	(RF4_ARROW_1 | RF4_ARROW_2 | RF4_ARROW_3 | RF4_ARROW_4)

#define RF5_BOLT_MASK \
	(RF5_BO_ACID | RF5_BO_ELEC | RF5_BO_FIRE | RF5_BO_COLD | \
	RF5_BO_POIS | RF5_BO_NETH | RF5_BO_WATE | RF5_BO_MANA | \
	RF5_BO_PLAS | RF5_BO_ICEE | RF5_MISSILE)

#define RF6_BOLT_MASK \
	0L

/* The default value for full_grid. */
#define MAX_FULL_GRID (MAX_HGT+MAX_WID+1)

/* Hack -- summon spells */

#define RF4_SUMMON_MASK \
	0L

#define RF5_SUMMON_MASK \
	0L

#define RF6_SUMMON_MASK \
	(RF6_S_KIN | RF6_S_REAVER | RF6_S_MONSTER | RF6_S_MONSTERS | RF6_S_ANT | \
	RF6_S_SPIDER | RF6_S_HOUND | RF6_S_HYDRA | RF6_S_CTHULOID | RF6_S_DEMON | \
	RF6_S_UNDEAD | RF6_S_DRAGON | RF6_S_HI_UNDEAD | RF6_S_HI_DRAGON | \
	RF6_S_GOO | RF6_S_UNIQUE | RF6_S_IB)



/* death_event types */

#define DEATH_NOTHING 1 /* Do nothing. */
#define DEATH_MONSTER 2 /* Create monsters. */
#define DEATH_OBJECT 3  /* Create objects. */
#define DEATH_EXPLODE 4 /* Create explosions. */
#define DEATH_COIN 5    /* Force the type of coin to generate. */

/* Death event flags */
#define EF_IF_PREV  0x20 /* Only roll if the previous event happened. */
#define EF_ONLY_ONE 0x40 /* Only one such item can be generated at once. */
#define EF_KNOWN    0x80 /* This event has been witnessed by the player */

/* Object event flags */
#define EI_EGO 0x04 /* DEATH_OBJECT only */
#define EI_ART 0x08 /* DEATH_OBJECT only */
#define EI_RAND 0x10 /* DEATH_OBJECT only */

/* Error codes from err_str */

#define SUCCESS 0 /* No error */

#define PARSE_ERROR_GENERIC                  1
#define PARSE_ERROR_OBSOLETE_FILE            2
#define PARSE_ERROR_MISSING_RECORD_HEADER    3
#define PARSE_ERROR_NON_SEQUENTIAL_RECORDS   4
#define PARSE_ERROR_INVALID_FLAG             5
#define PARSE_ERROR_UNDEFINED_DIRECTIVE      6
#define PARSE_ERROR_OUT_OF_MEMORY            7
#define PARSE_ERROR_OUT_OF_BOUNDS            8
#define PARSE_ERROR_TOO_MANY_ARGUMENTS      9
#define PARSE_ERROR_INVALID_SPELL_FREQ      10
#define PARSE_ERROR_INCORRECT_SYNTAX 11 /* sscanf() failure or equivalent. */

#define PARSE_ERROR_MAX                     12

#define FILE_ERROR_CANNOT_OPEN_FILE -101
#define FILE_ERROR_FILE_EXISTS 101
#define FILE_ERROR_EOF 102
#define FILE_ERROR_OVERFLOW 103

#define HOOK_ERROR_NO_SUCH_HOOK 201
#define HOOK_ERROR_OUT_OF_MEMORY 202

/* Errors from genocide(), etc.. */
#define POWER_ERROR_ABORT 401
#define POWER_ERROR_FAIL 402

/* And from do_power(). */
#define POWER_ERROR_NO_SUCH_POWER 403
#define POWER_ERROR_NO_SUCH_DIR 404 /* Wants get_aim_dir(). */
#define POWER_ERROR_NO_SUCH_REP_DIR 405 /* Wants get_rep_dir(). */

/* For errors (+/-)500-599, see z-term.h */

/* From get_item(). */
#define GET_ITEM_ERROR_ABORT -1 /* User hit escape */
#define GET_ITEM_ERROR_NO_ITEMS -2 /* No legal items to choose */

/* Return codes "okay" function can return to move_in_direction(). */
#define MVD_CONTINUE 0
#define MVD_STOP_HERE 1
#define MVD_STOP_BEFORE_HERE 2

/* Energy constants */
#define TURN_ENERGY 1000 /* Energy used in one player turn. */
#define TICK_ENERGY 100 /* Energy given in one game turn. */

/* Timed effect indices */
#define TIMED_BLIND 0
#define TIMED_CONFUSED 1
#define TIMED_POISONED 2
#define TIMED_AFRAID 3
#define TIMED_PARALYZED 4
#define TIMED_IMAGE 5
#define TIMED_FAST 6
#define TIMED_SLOW 7
#define TIMED_SHIELD 8
#define TIMED_BLESSED 9
#define TIMED_HERO 10
#define TIMED_SHERO 11
#define TIMED_PROTEVIL 12
#define TIMED_WRAITH 13
#define TIMED_INVULN 14
#define TIMED_ESP 15
#define TIMED_INVIS 16
#define TIMED_INFRA 17
#define TIMED_OPPOSE_ACID 18
#define TIMED_OPPOSE_ELEC 19
#define TIMED_OPPOSE_FIRE 20
#define TIMED_OPPOSE_COLD 21
#define TIMED_OPPOSE_POIS 22
#define TIMED_STUN 23
#define TIMED_CUT 24
#define TIMED_FOOD 25
#define TIMED_VAMP 26
#define TIMED_MAX 27

/*** Macro Definitions ***/


/*
 * Hack -- The main "screen"
 */
#define term_screen     (windows[0].term)

/*
 * Determine if a given inventory item is "aware"
 *
 * Test 1: aware flag
 * Test 2: flavourless
 */

/* Based on a given object_kind */
#define object_aware_kp(T) \
	(((T)->aware) || \
	(u_info[(T)->u_idx].name == 0))

/* Based on a given object_type */
#define object_aware_p(T) \
	(object_aware_kp(&k_info[(T)->k_idx]))

/*
 * Determine if a given inventory item is "tried"
 */
#define object_tried_p(T) \
	(k_info[(T)->k_idx].tried)


/*
 * Determine if a given inventory item is "known"
 * Test One -- Check for special "known" tag
 * Test Two -- Check for "Easy Know" + "Aware"
 * Test Three -- Check for "Empty" + "Aware"
 */
#define object_known_p(T) \
	(((T)->ident & (IDENT_KNOWN)) || \
	(k_info[(T)->k_idx].flags3 & TR3_EASY_KNOW && object_aware_p(T)) || \
	(object_aware_p(T) && (T)->ident & IDENT_EMPTY))

/*
 * Artifacts use the "name1" field
 */
#define artifact_p(T) \
	((T)->name1 ? TRUE : FALSE)

/*
 * Randarts use the "art_name" field, but are rarely checked for alone
 */
#define allart_p(T) \
	((artifact_p(T) || (T)->art_name) ? TRUE : FALSE)

/*
 * The level at which an object is generated for rating, etc.
 * Maybe this would be better as "the depth at which this item is most likely
 * to be generated"?
 */
#define object_k_level(K_PTR) \
	((K_PTR)->locale[0])

/*
 * The difficulty with which a wand, staff or rod can be used.
 */
#define wand_power(K_PTR) \
	((((K_PTR)->tval == TV_WAND) || ((K_PTR)->tval == TV_STAFF) || \
	((K_PTR)->tval == TV_ROD)) ? ((K_PTR)->extra) : -1)

#define is_wand_p(K_PTR) \
	(wand_power(K_PTR) != -1)

/*
 * Ego-Items use the "name2" field
 */
#define ego_item_p(T) \
	((T)->name2 ? TRUE : FALSE)


/*
 * Broken items.
 */
#define broken_p(T) \
	((T)->ident & (IDENT_BROKEN))

/*
 * Cursed items.
 */
#define cursed_p(T) \
	((T)->ident & (IDENT_CURSED))

/*
 * Hidden items.
 */
#define hidden_p(T) \
	((T)->ident & (IDENT_HIDDEN))

/*
 * Object kind which is created by the normal item generation routine
 * (rather than the insta-art one or under special circumstances).
 */
#define kind_created_p(T) \
	((T)->chance[0] != 0)


/*
 * Give the adj_stat_x index for a given stat value.
 * The indices go up as follows:
 * 3, 4, ..., 17, 18, 18/10-19, 18/20-29, ..., 18/210-219, 18/220+
 */
#define ind_stat(X) \
	((X < 4) ? 0 : (X < 18) ? X-3 : (X < 18+220) ? 15+(X-18)/10 : 37)

/* How many stat indices there are (depends on above). */
#define NUM_STAT_INDICES 38


/*
 * Determines if a map location is defined
 * Note the hack involving casting the args to unsigned
 */
#define in_bounds(Y,X) \
   (((unsigned)(Y) < (unsigned)(cur_hgt)) && \
    ((unsigned)(X) < (unsigned)(cur_wid)))

/*
 * Determines if a map location is fully inside the outer walls
 * This is more than twice as expensive as "in_bounds()", but
 * often we need to exclude the outer walls from calculations.
 */
#define in_bounds_fully(Y,X) \
   (((Y) > 0) && ((Y) < cur_hgt-1) && \
    ((X) > 0) && ((X) < cur_wid-1))


/*
 * Determines if a map location is currently "on screen"
 * Note that "panel_contains(Y,X)" always implies "in_bounds(Y,X)".
 */
#define panel_contains(Y,X) \
  (((unsigned)((Y) - p_ptr->wy) < (unsigned)(SCREEN_HGT)) && \
   ((unsigned)((X) - p_ptr->wx) < (unsigned)(SCREEN_WID)))




/*
 * Determine if a "legal" grid is a "floor" grid
 *
 * Line 1 -- forbid doors, rubble, seams, walls, trees
 *
 * Note that the terrain features are split by a one bit test
 * into those features which block line of sight and those that
 * do not, allowing an extremely fast single bit check below.
 */
#define cave_floor_bold(Y,X) \
    (!(cave_feat[Y][X] & 0x20) && cave_feat[Y][X] != FEAT_BUSH && cave_feat[Y][X] != FEAT_WATER)

/*
 * Determine if a "legal" grid is a "clean" floor grid
 *
 * Line 1 -- forbid non-floors
 * Line 2 -- forbid normal objects
 */
#define cave_clean_bold(Y,X) \
    ((cave_feat[Y][X] == FEAT_FLOOR) && \
     (cave_o_idx[Y][X] == 0))

/*
 * Determine if a "legal" grid is an "empty" floor grid
 *
 * Line 1 -- forbid doors, rubble, seams, walls
 * Line 2 -- forbid player/monsters
 */
#define cave_empty_bold(Y,X) \
    (cave_floor_bold(Y,X) && \
     (cave_m_idx[Y][X] == 0))

/*
 * Determine if a "legal" grid is an "naked" floor grid
 *
 * Line 1 -- forbid non-floors
 * Line 2 -- forbid normal objects
 * Line 3 -- forbid player/monsters
 */
#define cave_naked_bold(Y,X) \
    ((cave_feat[Y][X] == FEAT_FLOOR) && \
     (cave_o_idx[Y][X] == 0) && \
     (cave_m_idx[Y][X] == 0))




/*
 * Determine if a "legal" grid is "permanent"
 *
 * Line 1 -- perma-walls
 * Line 2-3 -- stairs
 * Line 4-5 -- shop doors
 */
#define cave_perma_bold(Y,X) \
    ((cave_feat[Y][X] >= FEAT_PERM_EXTRA) || \
     ((cave_feat[Y][X] == FEAT_LESS) || \
      (cave_feat[Y][X] == FEAT_MORE)) || \
     ((cave_feat[Y][X] >= FEAT_SHOP_HEAD) && \
      (cave_feat[Y][X] <= FEAT_SHOP_TAIL)))


/*
 * Determine if a "legal" grid is within "los" of the player
 *
 * Note the use of comparison to zero to force a "boolean" result
 */
#define player_has_los_bold(Y,X) \
    ((cave_info[Y][X] & (CAVE_VIEW)) != 0)



/* Find the specified day within the year. */
#define YEARDAY(X) \
	(((X/365)%4 == 3) ? X%1461-1095 : X%1461%365 + (X%1461%365 > 58))




/*
 * Hack -- Prepare to use the "Secure" routines
 */
#if defined(SET_UID) && defined(SECURE)
extern int PlayerUID;
# define getuid() PlayerUID
# define geteuid() PlayerUID
#endif


/* Replaces letters and numbers with numbers in the range 0-35 */
//#define ator(x) \
//	((ISDIGIT(x)) ? (x + 26 - '0') : (ISALPHA(x)) ? A2I(FORCELOWER(x)) : -1)
/* And vice versa */
//#define rtoa(x) ((x < 26) ? I2A(x) : (x < 36) ? (x - 26 + '0') : '!')

// Match with table::option_chars
#define ator(x) \
    ((ISDIGIT(x)) ? (x + 52 - '0') : (ISALPHA(x)) ? ((ISLOWER(x)) ? (x - 'a') : (x + 26 - 'A')) : -1)
#define rtoa(x) ((x < 26) ? (x + 'a') : (x < 52) ? (x - 26 + 'A') : (x < 62) ? (x - 52 + '0') : '!')


/*** Sound constants ***/


/*
 * Mega-Hack -- some primitive sound support (see "main-win.c")
 *
 * Some "sound" constants for "Term_xtra(TERM_XTRA_SOUND, val)"
 */
#define SOUND_HIT           1
#define SOUND_MISS          2
#define SOUND_FLEE          3
#define SOUND_DROP          4
#define SOUND_KILL          5
/* #define SOUND_LEVEL         6 */
#define SOUND_DEATH         7
#define SOUND_STUDY     8
#define SOUND_TELEPORT  9
#define SOUND_SHOOT     10
#define SOUND_QUAFF     11
#define SOUND_ZAP       12
#define SOUND_WALK      13
#define SOUND_TPOTHER   14
#define SOUND_HITWALL   15
#define SOUND_EAT       16
#define SOUND_STORE1    17
#define SOUND_STORE2    18
#define SOUND_STORE3    19
#define SOUND_STORE4    20
#define SOUND_DIG       21
#define SOUND_OPENDOOR  22
#define SOUND_SHUTDOOR  23
#define SOUND_TPLEVEL   24
/* #define SOUND_SCROLL 25 */
#define SOUND_BUY 26
#define SOUND_SELL 27
#define SOUND_WARN 28

/*
 * Mega-Hack -- maximum known sounds
 */
#define SOUND_MAX 29


/* Size of the buffer needed for object_desc() */
#define ONAME_MAX (z_info->oname)
/* And for the normal monster_desc() buffer. */
#define MNAME_MAX (z_info->mname)

#ifdef VARIABLE_ARRAYS
#define ONAME_LEN ONAME_MAX
#else /* VARIABLE_ARRAYS */
#define ONAME_LEN 1024
#endif

/*
 * Hack -- attempt to reduce various values
 */
#ifdef ANGBAND_LITE
# undef MACRO_MAX
# define MACRO_MAX      128
# undef QUARK_MAX
# define QUARK_MAX      128
# undef MESSAGE_MAX
# define MESSAGE_MAX    128
# undef MESSAGE_BUF
# define MESSAGE_BUF    4096
#endif

/*
 * Available graphic modes
 */
#define GRAPHICS_NONE         0
#define GRAPHICS_ORIGINAL     1
#define GRAPHICS_ADAM_BOLT    2
#define GRAPHICS_ANY          3
#define GRAPHICS_HALF_3D      4

/* Parameter for display_player(). */
#define DPLAY_PLAYER 0 /* Shows weapons, exp. factor, etc. */
#define DPLAY_SKILLS 1 /* Shows skill tables. */
#define DPLAY_STATS 2 /* Shows stat breakdown. */
#define DPLAY_FLAGS 3 /* Shows a list of flags. */
#define DPLAY_FLAG_1 4 /* Shows some flags by object. */
#define DPLAY_FLAG_2 5 /* Shows some flags by object. */
#define DPLAY_CHAOS 6 /* Shows chaos features if allowed. */
#define DPLAY_MAX 7 /* Max for the change_name() loop. */

/* Displays not available to change_name(). */
#define DPLAY_BIRTH -1 /* Show stat-related effects. */

/*
 * Decide whether to display an object by its u_info representation.
 * Never do it with objects which have no u_info counterpart.
 * Always do it with unknown objects.
 * If possible, do it with objects represented as a dark space.
 */

/*
 * Return the "attr" for a given item.
 */
#define object_kind_attr(T) \
	((((!object_aware_kp(T)) || ((T)->gfx.xa == TERM_DARK))) ? \
	(u_info[(T)->u_idx].gfx.xa) : ((T)->gfx.xa))

#define object_attr(T) object_kind_attr(k_info+(T)->k_idx)

/*
 * Return the "char" for a given item.
 */
#define object_kind_char(T) \
	((((!object_aware_kp(T)) || ((T)->gfx.xc == ' '))) ? \
	(u_info[(T)->u_idx].gfx.xc) : ((T)->gfx.xc))

#define object_char(T) object_kind_char(k_info+(T)->k_idx)

/*
 * Return the appropriate colour for display_player_flags_aux, et al.
 */
#define OPPOSE_COL(val) \
	((val > 10) ? TERM_L_GREEN : \
	(val > 5) ? TERM_YELLOW : \
	(val) ? TERM_RED : \
	TERM_DARK)

/*
 * Player Skill Indices
 */

#define MAX_SKILLS 28

#define SKILL_TOUGH 0
#define SKILL_MANA 1
#define SKILL_DISARM 2
#define SKILL_DEVICE 3
#define SKILL_SAVE 4
#define SKILL_STEALTH 5
#define SKILL_SEARCH 6
#define SKILL_PERCEPTION 7
#define SKILL_CLOSE 8
#define SKILL_MISSILE 9
#define SKILL_MA 10
#define SKILL_CORPORIS 11
#define SKILL_ANIMAE 12
#define SKILL_VIS 13
#define SKILL_NATURAE 14
#define SKILL_NECROMANCY 15
#define SKILL_SORCERY 16
#define SKILL_CONJURATION 17
#define SKILL_THAUMATURGY 18
#define SKILL_MINDCRAFTING 19
#define SKILL_CHI 20
#define SKILL_RACIAL 21
#define SKILL_STAB 22
#define SKILL_SLASH 23
#define SKILL_CRUSH 24
#define SKILL_SHAMAN 25
#define SKILL_HEDGE 26
#define SKILL_PSEUDOID 27

#define SKILL_NONE MAX_SKILLS

/*
 * Maximum skill name length. Only used during initialisation at present.
 */
#define SKILL_NAME_LEN 128

/* Spoiler flags */
#define SPOIL_EGO_ITEMS 0
#define SPOIL_ARTIFACTS 0

/* Size of player_name */
#define NAME_LEN 32

/* Header identities. */
#define Z_HEAD 1
#define MACRO_HEAD 2
#define F_HEAD 3
#define K_HEAD 4
#define U_HEAD 5
#define A_HEAD 6
#define E_HEAD 7
#define R_HEAD 8
#define EVENT_HEAD 9
#define V_HEAD 10
#define OB_HEAD 11
#define D_HEAD 12
#define T_HEAD 13
#define Q_HEAD 14
#define S_HEAD 15
#define TPL_HEAD 16
#define EASY_HEAD 17


/*
 * Command numbers for do_cmd_wizard(), etc..
 */

/* Debug command set. The various debug commands are at an offset to this. */
#define CMD_DEBUG (KTRL('a') << 8)

/* Shopping command set. Ditto. (not yet implemented) */
#define CMD_SHOP ('_' << 8)

/* init_macro_type conversion types */
#define MACRO_CONV_REPLACE 1 /* Replace "name" with "text". */
#define MACRO_CONV_AFTER   2 /* Process the "text" after the current one. */
#define MACRO_CONV_BEFORE  3 /* Process the "text" before the current one. */
#define MACRO_CONV_SPECIAL 4 /* Do something special. */

/*
 * Special macros are macros whose effects are hard-coded, but are listed
 * in macro_info so that they can be turned off and potentially be used
 * under other circumstances.
 */
#define MACRO_SPEC_MOVE_TO_FRONT 0 /* Used for CH_ARTICLE */

/* An unknown number ("some") of an object. */
#define UNKNOWN_OBJECT_NUMBER 255

/*
 * The key sent by resize_inkey. This is an arbitary control key to ensure that
 * it isn't parsed by the function which called it (or, hopefully by keymaps).
 */
#define RESIZE_INKEY_KEY 28

/* Clear the top line of the screen. */
#define message_flush() msg_print(NULL)
#define screen_save() Term_save()
#define screen_load() Term_load()

/* A more friendly strcmp? */
#define streq(A, B) !strcmp((A), (B))

/* String used in show_file_aux() to indicate a non-ToME link target. */
#define CC_LINK_PREFIX "%%%%%"
#define CC_LINK_LEN 5 /* strlen(CC_LINK_PREFIX) */

/* String used in show_file_aux() to indicate a conditional paragraph. */
#define CC_IF_PREFIX "%%%%? "

/* Identify a monster which is never generated normally. */
#define is_fake_monster(R_PTR) \
	((R_PTR)->rarity == 0)

/* Various indices for object_found. */
#define FOUND_UNKNOWN 1 /* Of unknown origin. */
#define FOUND_CHEAT 2 /* Created by a debug command. */
#define FOUND_MIXED 3 /* Created by various methods. */
#define FOUND_FLOOR 4 /* Floor item. */
#define FOUND_VAULT 5 /* Vault item. */
#define FOUND_QUEST 6 /* Quest reward. */
#define FOUND_DIG 7 /* Dug up from the terrain. */
#define FOUND_CHEST 8 /* Found in a chest. */
#define FOUND_SHOP 9 /* Bought from a shop. */
#define FOUND_BIRTH 10 /* Given at the start of the game. */
#define FOUND_SPELL 11 /* Created by magic. */
#define FOUND_CHAOS 12 /* Given by a chaos patron. */
#define FOUND_MONSTER 128 /* Hack - dropped by a monster (128-255). */

#define FOUND_LEV_UNKNOWN 255 /* Level not known (e.g. for old objects). */

#define FOUND_DUN_UNKNOWN 254 /* Dungeon not known. */
#define FOUND_DUN_WILD 255 /* Wilderness. */

/* Current monster indices. */
#define MON_PLAYER 0
#define MON_NOBODY_THE_UNNAMED_GHOST______________________________________ 1
#define MON_POISON 2
#define MON_LIGHT 3
#define MON_TRAP 4
#define MON_CHAOS_PATRON 5
#define MON_CASTING_GENOCIDE 6
#define MON_CASTING_MASS_GENOCIDE 7
#define MON_CALLING_THE_VOID 8
#define MON_CASTING_HELLFIRE 9
#define MON_EARTHQUAKE 10
#define MON_CORRUPT_PATTERN 11
#define MON_PATTERN 12
#define MON_SOLID_ROCK 13
#define MON_BLEEDING 14
#define MON_STARVATION 15
#define MON_DANGEROUS_EQUIPMENT 16
#define MON_DANGEROUS_MUTATION 17
#define MON_POISONOUS_FOOD 18
#define MON_HARMFUL_POTION 19
#define MON_HARMFUL_SCROLL 20
#define MON_CONCENTRATING_TOO_HARD 21
#define MON_FATAL_POLYMORPH 22
#define MON_SUICIDE 23
#define MON_G_THE_SKELETON_RACE 24
#define MON_G_THE_ZOMBIFIED_RACE 25
#define MON_G_THE_MUMMIFIED_RACE 26
#define MON_G_THE_POLTERGEIST 27
#define MON_G_THE_SPIRIT 28
#define MON_G_THE_GHOST 29
#define MON_G_THE_VAMPIRE 30
#define MON_G_THE_WRAITH 31
#define MON_G_THE_VAMPIRE_LORD 32
#define MON_G_THE_GHOST_2 33
#define MON_G_THE_GHOST_3 34
#define MON_G_THE_LICH 35
#define MON_G_THE_GHOST_4 36
#define MON_FILTHY_STREET_URCHIN 37
#define MON_SCRAWNY_CAT 38
#define MON_SCRUFFY_LITTLE_DOG 39
#define MON_FARMER_MAGGOT 40
#define MON_SMALL_CHILD 41
#define MON_HOBO 42
#define MON_RAVING_LUNATIC 43
#define MON_PITIFUL_LOOKING_BEGGAR 44
#define MON_MANGY_LOOKING_LEPER 45
#define MON_AGENT_OF_BLACK_MARKET 46
#define MON_SINGING_HAPPY_DRUNK 47
#define MON_AIMLESS_LOOKING_MERCHANT 48
#define MON_MEAN_LOOKING_MERCENARY 49
#define MON_BATTLE_SCARRED_VETERAN 50
#define MON_FOOLHARDY_ADOLESCENT 51
#define MON_GREY_MOULD 52
#define MON_BLINKING_DOT 53
#define MON_NEWT 54
#define MON_GIANT_WHITE_CENTIPEDE 55
#define MON_TOWNSMAN_OF_IB 56
#define MON_MAGICIAN_OF_IB 57
#define MON_GIANT_WHITE_MOUSE 58
#define MON_LARGE_BROWN_SNAKE 59
#define MON_SMALL_KOBOLD 60
#define MON_KOBOLD 61
#define MON_WHITE_WORM_MASS 62
#define MON_FLOATING_EYE 63
#define MON_ROCK_LIZARD 64
#define MON_GRID_BUG 65
#define MON_JACKAL 66
#define MON_SOLDIER_ANT 67
#define MON_FRUIT_BAT 68
#define MON_REDWEED 69
#define MON_SHRIEKER_MUSHROOM_PATCH 70
#define MON_THIEF_OF_IB 71
#define MON_METALLIC_GREEN_CENTIPEDE 72
#define MON_NOVICE_WARRIOR 73
#define MON_NOVICE_ROGUE 74
#define MON_NOVICE_SHAMAN 75
#define MON_NOVICE_WIZARD 76
#define MON_YELLOW_MUSHROOM_PATCH 77
#define MON_WHITE_JELLY 78
#define MON_GIANT_BLACK_ANT 79
#define MON_SALAMANDER 80
#define MON_WHITE_HARPY 81
#define MON_BLUE_YEEK 82
#define MON_GRIP_FARMER_MAGGOTS_DOG 83
#define MON_FANG_FARMER_MAGGOTS_DOG 84
#define MON_KING_RAT 85
#define MON_GREEN_WORM_MASS 86
#define MON_LARGE_YELLOW_SNAKE 87
#define MON_CAVE_SPIDER 88
#define MON_WILD_CAT 89
#define MON_SMEAGOL 90
#define MON_GREEN_OOZE 91
#define MON_POLTERGEIST 92
#define MON_METALLIC_BLUE_CENTIPEDE 93
#define MON_GIANT_WHITE_LOUSE 94
#define MON_BLACK_NAGA 95
#define MON_SPOTTED_MUSHROOM_PATCH 96
#define MON_SILVER_JELLY 97
#define MON_SCRUFFY_LOOKING_HOBBIT 98
#define MON_GIANT_WHITE_ANT 99
#define MON_YELLOW_MOULD 100
#define MON_METALLIC_RED_CENTIPEDE 101
#define MON_YELLOW_WORM_MASS 102
#define MON_CLEAR_WORM_MASS 103
#define MON_RADIATION_EYE 104
#define MON_CAVE_LIZARD 105
#define MON_NOVICE_RANGER 106
#define MON_BLUE_JELLY 107
#define MON_CREEPING_COPPER_COINS 108
#define MON_GIANT_WHITE_RAT 109
#define MON_BLUE_WORM_MASS 110
#define MON_LARGE_GREY_SNAKE 111
#define MON_WILD_MAN 112
#define MON_NOVICE_WIZARD_2 113
#define MON_GREEN_NAGA 114
#define MON_BLUE_OOZE 115
#define MON_GREEN_GLUTTON_GHOST 116
#define MON_GREEN_JELLY 117
#define MON_LARGE_KOBOLD 118
#define MON_SOLDIER_OF_IB 119
#define MON_DISENCHANTER_EYE 120
#define MON_RED_WORM_MASS 121
#define MON_COPPERHEAD_SNAKE 122
#define MON_DEATH_SWORD 123
#define MON_PURPLE_MUSHROOM_PATCH 124
#define MON_NOVICE_SHAMAN_2 125
#define MON_NOVICE_WARRIOR_2 126
#define MON_NIBELUNG 127
#define MON_THE_DISEMBODIED_HAND 128
#define MON_BROWN_MOULD 129
#define MON_GIANT_BROWN_BAT 130
#define MON_NOVICE_ARCHER 131
#define MON_CREEPING_SILVER_COINS 132
#define MON_SNAGA 133
#define MON_RATTLESNAKE 134
#define MON_CRYPT_CREEP 135
#define MON_ROTTING_CORPSE 136
#define MON_CAVE_ORC 137
#define MON_WOOD_SPIDER 138
#define MON_MANES 139
#define MON_BLOODSHOT_EYE 140
#define MON_RED_NAGA 141
#define MON_RED_JELLY 142
#define MON_ALCHEMIST_OF_IB 143
#define MON_LOST_SOUL 144
#define MON_NIGHT_LIZARD 145
#define MON_VORT_THE_KOBOLD_QUEEN 146
#define MON_WORMTONGUE_AGENT_OF_SARUMAN 147
#define MON_ROBIN_HOOD_THE_OUTLAW 148
#define MON_LAGDUF_THE_SNAGA 149
#define MON_BROWN_YEEK 150
#define MON_NOVICE_RANGER_2 151
#define MON_GIANT_SALAMANDER 152
#define MON_GAPING_MAW 153
#define MON_GREEN_MOULD 154
#define MON_NOVICE_PALADIN 155
#define MON_LEMURE 156
#define MON_HILL_ORC 157
#define MON_BANDIT 158
#define MON_HUNTING_HAWK 159
#define MON_PHANTOM_WARRIOR 160
#define MON_GREMLIN 161
#define MON_YETI 162
#define MON_CURSED_ONE_OF_IB 163
#define MON_GIANT_GREY_RAT 164
#define MON_BLACK_HARPY 165
#define MON_ORC_SHAMAN 166
#define MON_BABY_BLUE_DRAGON 167
#define MON_BABY_WHITE_DRAGON 168
#define MON_BABY_GREEN_DRAGON 169
#define MON_BABY_BLACK_DRAGON 170
#define MON_BABY_RED_DRAGON 171
#define MON_GIANT_RED_ANT 172
#define MON_BRODDA_THE_EASTERLING 173
#define MON_KING_COBRA 174
#define MON_WAR_BEAR 175
#define MON_KILLER_BEE 176
#define MON_GIANT_SPIDER 177
#define MON_DARK_ELVEN_WIZARD 178
#define MON_ORFAX_SON_OF_BOLDOR 179
#define MON_DARK_ELVEN_WARRIOR 180
#define MON_ARCHER_MUSHROOM 181
#define MON_GRISHNAKH_THE_HILL_ORC 182
#define MON_HAIRY_MOULD 183
#define MON_DISENCHANTER_MOULD 184
#define MON_PSEUDO_DRAGON 185
#define MON_TENGU 186
#define MON_CREEPING_GOLD_COINS 187
#define MON_WOLF 188
#define MON_GIANT_FRUIT_FLY 189
#define MON_PANTHER 190
#define MON_BRIGAND 191
#define MON_FTHSSSSSS_CHAMPION_OF_CATS 192
#define MON_SHADOW_CREATURE 193
#define MON_UNDEAD_MASS 194
#define MON_CHAOS_SHAPECHANGER 195
#define MON_BABY_MULTI_HUED_DRAGON 196
#define MON_HIPPOGRIFF 197
#define MON_BLACK_MAMBA 198
#define MON_WHITE_WOLF 199
#define MON_GRAPE_JELLY 200
#define MON_NETHER_WORM_MASS 201
#define MON_ABYSS_WORM_MASS 202
#define MON_GOLFIMBUL_THE_HILL_ORC_CHIEF 203
#define MON_HELLCAT 204
#define MON_MOON_BEAST 205
#define MON_MASTER_YEEK 206
#define MON_CULTIST 207
#define MON_DARK_ELVEN_DEMONOLOGIST 208
#define MON_AIR_SPIRIT 209
#define MON_SKELETON_HUMAN 210
#define MON_ZOMBIFIED_HUMAN 211
#define MON_TIGER 212
#define MON_MOANING_SPIRIT 213
#define MON_FRUMIOUS_BANDERSNATCH 214
#define MON_SPOTTED_JELLY 215
#define MON_DRIDER 216
#define MON_HELLBAT 217
#define MON_KILLER_BROWN_BEETLE 218
#define MON_BOLDOR_KING_OF_THE_YEEKS 219
#define MON_OGRE 220
#define MON_CREEPING_MITHRIL_COINS 221
#define MON_ILLUSIONIST 222
#define MON_SHAMAN 223
#define MON_BLACK_ORC 224
#define MON_OCHRE_JELLY 225
#define MON_GIANT_COCKROACH 226
#define MON_GIANT_WHITE_DRAGON_FLY 227
#define MON_WITCH_OF_IB 228
#define MON_GIBBERING_MOUTHER 229
#define MON_MASTIFF 230
#define MON_HILL_GIANT 231
#define MON_FLESH_GOLEM 232
#define MON_WARG 233
#define MON_FIRE_VAMPIRE 234
#define MON_GIANT_FLEA 235
#define MON_BLACK_OGRE 236
#define MON_MAGIC_MUSHROOM_PATCH 237
#define MON_GUARDIAN_NAGA 238
#define MON_LIGHT_HOUND 239
#define MON_SHADOW_HOUND 240
#define MON_FLYING_SKULL 241
#define MON_MI_GO 242
#define MON_GIANT_TARANTULA 243
#define MON_GIANT_CLEAR_CENTIPEDE 244
#define MON_MIRKWOOD_SPIDER 245
#define MON_FROST_GIANT 246
#define MON_GRIFFON 247
#define MON_HOMONCULOUS 248
#define MON_GNOME_WIZARD 249
#define MON_CLEAR_HOUND 250
#define MON_UMBER_HULK 251
#define MON_ORC_CAPTAIN 252
#define MON_GELATINOUS_CUBE 253
#define MON_GIANT_GREEN_DRAGON_FLY 254
#define MON_FIRE_GIANT 255
#define MON_THE_EMISSARY 256
#define MON_QUASIT 257
#define MON_IMP 258
#define MON_FOREST_TROLL 259
#define MON_2_HEADED_HYDRA 260
#define MON_WATER_SPIRIT 261
#define MON_GIANT_RED_SCORPION 262
#define MON_EARTH_SPIRIT 263
#define MON_FIRE_SPIRIT 264
#define MON_FIRE_HOUND 265
#define MON_COLD_HOUND 266
#define MON_ENERGY_HOUND 267
#define MON_POTION_MIMIC 268
#define MON_BLINK_DOG 269
#define MON_URUK 270
#define MON_SHAGRAT_THE_ORC_CAPTAIN 271
#define MON_GORBAG_THE_ORC_CAPTAIN 272
#define MON_SHAMBLING_MOUND 273
#define MON_STONE_GIANT 274
#define MON_GIANT_BLACK_DRAGON_FLY 275
#define MON_STONE_GOLEM 276
#define MON_RED_MOULD 277
#define MON_GIANT_GOLD_DRAGON_FLY 278
#define MON_BOLG_SON_OF_AZOG 279
#define MON_PHASE_SPIDER 280
#define MON_WYVERN 281
#define MON_LIVINGSTONE 282
#define MON_EARTH_HOUND 283
#define MON_AIR_HOUND 284
#define MON_SABRE_TOOTH_TIGER 285
#define MON_WATER_HOUND 286
#define MON_CHIMERA 287
#define MON_QUYLTHULG 288
#define MON_SASQUATCH 289
#define MON_THE_QUEEN_OF_IB 290
#define MON_DARK_ELVEN_LORD 291
#define MON_CLOUD_GIANT 292
#define MON_UGLUK_THE_URUK 293
#define MON_BLUE_DRAGON_BAT 294
#define MON_FIRE_VORTEX 295
#define MON_WATER_VORTEX 296
#define MON_COLD_VORTEX 297
#define MON_ENERGY_VORTEX 298
#define MON_MUMMIFIED_ORC 299
#define MON_KILLER_STAG_BEETLE 300
#define MON_IRON_GOLEM 301
#define MON_AUTO_ROLLER 302
#define MON_GIANT_YELLOW_SCORPION 303
#define MON_BLACK_OOZE 304
#define MON_HARDENED_WARRIOR 305
#define MON_AZOG_KING_OF_THE_URUK_HAI 306
#define MON_DARK_ELVEN_WARLOCK 307
#define MON_MASTER_ROGUE 308
#define MON_RED_DRAGON_BAT 309
#define MON_GIANT_BRONZE_DRAGON_FLY 310
#define MON_KOUKO 311
#define MON_MIME_THE_NIBELUNG 312
#define MON_HAGEN_SON_OF_ALBERICH 313
#define MON_PHANTOM_BEAST 314
#define MON_4_HEADED_HYDRA 315
#define MON_TYRANNOSAUR 316
#define MON_MUMMIFIED_HUMAN 317
#define MON_VAMPIRE_BAT 318
#define MON_SANGAHYANDO_OF_UMBAR 319
#define MON_IT 320
#define MON_BANSHEE 321
#define MON_SILENT_WATCHER 322
#define MON_PUKELMAN 323
#define MON_DARK_ELVEN_SHAMAN 324
#define MON_STONE_TROLL 325
#define MON_TROLL_THAUMATURGIST 326
#define MON_WEREWORM 327
#define MON_KILLER_CRIMSON_BEETLE 328
#define MON_GIANT_GREY_ANT 329
#define MON_KHUFU_THE_MUMMIFIED_KING 330
#define MON_DISPLACER_BEAST 331
#define MON_CAVE_OGRE 332
#define MON_WHITE_WRAITH 333
#define MON_DEEP_ONE 334
#define MON_GHOUL 335
#define MON_ALBERICH_THE_NIBELUNG_KING 336
#define MON_HELLBLADE 337
#define MON_KILLER_RED_BEETLE 338
#define MON_CREEPING_ADAMANTITE_COINS 339
#define MON_ALGROTH 340
#define MON_HEADLESS 341
#define MON_VIBRATION_HOUND 342
#define MON_NEXUS_HOUND 343
#define MON_OGRE_WIZARD 344
#define MON_GRENDEL 345
#define MON_VAMPIRE 346
#define MON_GORGIMERA 347
#define MON_SHANTAK 348
#define MON_COLBRAN 349
#define MON_SPIRIT_NAGA 350
#define MON_STAIRWAY_TO_HELL 351
#define MON_GRENDELS_MOTHER 352
#define MON_BLACK_KNIGHT 353
#define MON_LESSER_WALL_MONSTER 354
#define MON_WIZARD 355
#define MON_MIND_FLAYER 356
#define MON_THE_ULTIMATE_DUNGEON_CLEANER 357
#define MON_FATHER_DAGON 358
#define MON_BASILISK 359
#define MON_ICE_TROLL 360
#define MON_BHOLE 361
#define MON_DIMENSIONAL_SHAMBLER 362
#define MON_RING_MIMIC 363
#define MON_CHAOS_TILE 364
#define MON_YOUNG_BLUE_DRAGON 365
#define MON_YOUNG_WHITE_DRAGON 366
#define MON_YOUNG_GREEN_DRAGON 367
#define MON_YOUNG_BRONZE_DRAGON 368
#define MON_MITHRIL_GOLEM 369
#define MON_SHADOW_DRAKE 370
#define MON_MANTICORE 371
#define MON_GIANT_ARMY_ANT 372
#define MON_KILLER_SLICER_BEETLE 373
#define MON_GHOST 374
#define MON_DEATH_WATCH_BEETLE 375
#define MON_OGRE_SHAMAN 376
#define MON_NEXUS_QUYLTHULG 377
#define MON_SHELOB_SPIDER_OF_DARKNESS 378
#define MON_NINJA 379
#define MON_MEMORY_MOSS 380
#define MON_STORM_GIANT 381
#define MON_SPECTATOR 382
#define MON_CAVE_TROLL 383
#define MON_ANTI_PALADIN 384
#define MON_CHAOS_MASTER 385
#define MON_BARROW_WIGHT 386
#define MON_GIANT_SKELETON_TROLL 387
#define MON_CHAOS_DRAKE 388
#define MON_LAW_DRAKE 389
#define MON_BALANCE_DRAKE 390
#define MON_ETHEREAL_DRAKE 391
#define MON_GROO_THE_WANDERER 392
#define MON_FASOLT_THE_GIANT 393
#define MON_BOKRUG_THE_WATER_LIZARD 394
#define MON_CHAOS_GHOST 395
#define MON_SPECTRE 396
#define MON_WATER_TROLL 397
#define MON_FIRE_ELEMENTAL 398
#define MON_LENG_SPIDER 399
#define MON_WATER_ELEMENTAL 400
#define MON_MULTI_HUED_HOUND 401
#define MON_NIGHT_STALKER 402
#define MON_CARRION_CRAWLER 403
#define MON_MASTER_THIEF 404
#define MON_FIRE_PHANTOM 405
#define MON_LICH 406
#define MON_MASTER_VAMPIRE 407
#define MON_ORIENTAL_VAMPIRE 408
#define MON_GIANT_GREY_SCORPION 409
#define MON_EARTH_ELEMENTAL 410
#define MON_AIR_ELEMENTAL 411
#define MON_DOOM_DRAKE 412
#define MON_MALICIOUS_LEPRECHAUN 413
#define MON_EOG_GOLEM 414
#define MON_OLOG 415
#define MON_HALFLING_SLINGER 416
#define MON_GRAVITY_HOUND 417
#define MON_ACIDIC_CYTOPLASM 418
#define MON_INERTIA_HOUND 419
#define MON_IMPACT_HOUND 420
#define MON_OOZE_ELEMENTAL 421
#define MON_YOUNG_BLACK_DRAGON 422
#define MON_MATURE_WHITE_DRAGON 423
#define MON_XORN 424
#define MON_LAW_GHOST 425
#define MON_GREY_WRAITH 426
#define MON_YOUNG_MULTI_HUED_DRAGON 427
#define MON_RAALS_TOME_OF_DESTRUCTION 428
#define MON_COLOSSUS 429
#define MON_YOUNG_GOLD_DRAGON 430
#define MON_MATURE_BLUE_DRAGON 431
#define MON_MATURE_GREEN_DRAGON 432
#define MON_MATURE_BRONZE_DRAGON 433
#define MON_YOUNG_RED_DRAGON 434
#define MON_NIGHTBLADE 435
#define MON_TRAPPER 436
#define MON_BODAK 437
#define MON_ELDER_THING 438
#define MON_ICE_ELEMENTAL 439
#define MON_IPSISSIMUS 440
#define MON_THE_INSANE_CRUSADER 441
#define MON_CHAOS_SPAWN 442
#define MON_TIME_ELEMENTAL 443
#define MON_THE_QUEEN_ANT 444
#define MON_WILL_O_THE_WISP 445
#define MON_MAGMA_ELEMENTAL 446
#define MON_BLACK_PUDDING 447
#define MON_KILLER_IRIDESCENT_BEETLE 448
#define MON_NEXUS_VORTEX 449
#define MON_PLASMA_VORTEX 450
#define MON_MATURE_RED_DRAGON 451
#define MON_MATURE_GOLD_DRAGON 452
#define MON_CRYSTAL_DRAKE 453
#define MON_MATURE_BLACK_DRAGON 454
#define MON_MATURE_MULTI_HUED_DRAGON 455
#define MON_DEATH_KNIGHT 456
#define MON_MANDOR_MASTER_OF_CHAOS 457
#define MON_TIME_VORTEX 458
#define MON_SHIMMERING_VORTEX 459
#define MON_ANCIENT_BLUE_DRAGON 460
#define MON_ANCIENT_BRONZE_DRAGON 461
#define MON_BEHOLDER 462
#define MON_EMPEROR_WIGHT 463
#define MON_FLYING_POLYP 464
#define MON_KARAKAL_SPIRIT_OF_FIRE 465
#define MON_BLACK_WRAITH 466
#define MON_NIGHTGAUNT 467
#define MON_BARON_OF_HELL 468
#define MON_NETHER_WRAITH 469
#define MON_LASHA_MISTRESS_OF_WATER 470
#define MON_KAVLAX_THE_MANY_HEADED 471
#define MON_ANCIENT_WHITE_DRAGON 472
#define MON_ANCIENT_GREEN_DRAGON 473
#define MON_CHTHONIAN 474
#define MON_NIGHT_MARE 475
#define MON_VAMPIRE_LORD 476
#define MON_ANCIENT_BLACK_DRAGON 477
#define MON_WAR_TROLL 478
#define MON_DISENCHANTER_WORM_MASS 479
#define MON_ROTTING_QUYLTHULG 480
#define MON_LESSER_TITAN 481
#define MON_9_HEADED_HYDRA 482
#define MON_ENCHANTRESS 483
#define MON_CULT_LEADER 484
#define MON_SORCERER 485
#define MON_XAREN 486
#define MON_JUBJUB_BIRD 487
#define MON_MINOTAUR 488
#define MON_MEDUSA_THE_GORGON 489
#define MON_DEATH_DRAKE 490
#define MON_ANCIENT_RED_DRAGON 491
#define MON_ANCIENT_GOLD_DRAGON 492
#define MON_GREAT_CRYSTAL_DRAKE 493
#define MON_CLUBBER_DEMON 494
#define MON_DEATH_QUASIT 495
#define MON_GLARYSSA_SUCCUBUS_QUEEN 496
#define MON_DARK_ELVEN_THAUMATURGE 497
#define MON_MASTER_LICH 498
#define MON_BYAKHEE 499
#define MON_SHOGGOTH 500
#define MON_SERVITOR_OF_THE_OUTER_GODS 501
#define MON_FORMLESS_SPAWN_OF_TSATHOGGUA 502
#define MON_HUNTING_HORROR 503
#define MON_UNDEAD_BEHOLDER 504
#define MON_SHADOW_DEMON 505
#define MON_IRON_LICH 506
#define MON_VERMICIOUS_KNID 507
#define MON_ANCIENT_MULTI_HUED_DRAGON 508
#define MON_ETHEREAL_DRAGON 509
#define MON_DARK_YOUNG_OF_SHUB_NIGGURATH 510
#define MON_GROM_MASTER_OF_EARTH 511
#define MON_STRAASHA_QUEEN_OF_AIR 512
#define MON_11_HEADED_HYDRA 513
#define MON_CULT_HIGH_PRIEST 514
#define MON_DREADMASTER 515
#define MON_DROLEM 516
#define MON_SCATHA_THE_WORM 517
#define MON_AVATAR_OF_NYARLATHOTEP 518
#define MON_NAZGUL 519
#define MON_SMAUG_THE_GOLDEN 520
#define MON_THE_STORMBRINGER 521
#define MON_ULTRA_ELITE_PALADIN 522
#define MON_DRACOLICH 523
#define MON_GREATER_TITAN 524
#define MON_DRACOLISK 525
#define MON_SPECTRAL_TYRANNOSAUR 526
#define MON_DEATH_MOULD 527
#define MON_FAFNER_THE_DRAGON 528
#define MON_GLAURUNG_FATHER_OF_THE_DRAGONS 529
#define MON_GREATER_WALL_MONSTER 530
#define MON_BALROG 531
#define MON_GOAT_OF_MENDES 532
#define MON_NIGHTWING 533
#define MON_MAULOTAUR 534
#define MON_NETHER_HOUND 535
#define MON_TIME_HOUND 536
#define MON_PLASMA_HOUND 537
#define MON_DEMONIC_QUYLTHULG 538
#define MON_GREAT_STORM_WYRM 539
#define MON_BAPHOMET_THE_MINOTAUR_LORD 540
#define MON_GRAND_MASTER_THIEF 541
#define MON_THE_COLLECTOR 542
#define MON_LORD_OF_CHAOS 543
#define MON_KHAMUL_THE_EASTERLING 544
#define MON_HOUND_OF_TINDALOS 545
#define MON_GREAT_ICE_WYRM 546
#define MON_THE_PHOENIX 547
#define MON_NIGHTCRAWLER 548
#define MON_HAND_DRUJ 549
#define MON_EYE_DRUJ 550
#define MON_SKULL_DRUJ 551
#define MON_CHAOS_VORTEX 552
#define MON_AETHER_VORTEX 553
#define MON_THE_LERNEAN_HYDRA 554
#define MON_THURINGWETHIL 555
#define MON_GREAT_HELL_WYRM 556
#define MON_HASTUR_THE_UNSPEAKABLE 557
#define MON_DRACONIC_QUYLTHULG 558
#define MON_NYOGTHA_THE_THING_THAT_SHOULD_NOT_BE 559
#define MON_SHUDDE_MELL 560
#define MON_FTHAGGHUA_LORD_OF_THE_FIRE_VAMPIRES 561
#define MON_TULZSCHA 562
#define MON_ANCALAGON_THE_BLACK 563
#define MON_NIGHTWALKER 564
#define MON_DAOLOTH 565
#define MON_SARUMAN_OF_MANY_COLOURS 566
#define MON_SHADOWLORD 567
#define MON_BAST_GODDESS_OF_CATS 568
#define MON_JABBERWOCK 569
#define MON_CHAOS_HOUND 570
#define MON_GREAT_WYRM_OF_CHAOS 571
#define MON_GREAT_WYRM_OF_LAW 572
#define MON_GREAT_WYRM_OF_BALANCE 573
#define MON_SHAMBLER 574
#define MON_GREAT_WYRM_OF_MANY_COLOURS 575
#define MON_TSELAKUS_THE_DREADLORD 576
#define MON_SKY_DRAKE 577
#define MON_THE_NORSA 578
#define MON_BONE_GOLEM 579
#define MON_MASTER_QUYLTHULG 580
#define MON_GREATER_DRACONIC_QUYLTHULG 581
#define MON_GREATER_ROTTING_QUYLTHULG 582
#define MON_VECNA_THE_EMPEROR_LICH 583
#define MON_OMARAX_THE_EYE_TYRANT 584
#define MON_ATLACH_NACHA_THE_SPIDER_GOD 585
#define MON_AETHER_HOUND 586
#define MON_UNMAKER 587
#define MON_BLACK_REAVER 588
#define MON_KLINGSOR_EVIL_MASTER_OF_MAGIC 589
#define MON_GLAAKI 590
#define MON_THE_EMPEROR_QUYLTHULG 591
#define MON_QLZQQLZUUP_THE_LORD_OF_FLESH 592
#define MON_HYPNOS 593
#define MON_THE_WITCH_KING_OF_ANGMAR 594
#define MON_ITHAQUA_THE_WINDWALKER 595
#define MON_SNAKE_OF_YIG 596
#define MON_CANTORAS_THE_SKELETAL_LORD 597
#define MON_MEPHISTOPHELES_LORD_OF_HELL 598
#define MON_YIG_FATHER_OF_SERPENTS 599
#define MON_STAR_SPAWN_OF_CTHULHU 600
#define MON_KASCHEI_THE_IMMORTAL 601
#define MON_YOG_SOTHOTH_THE_ALL_IN_ONE 602
#define MON_GREAT_WYRM_OF_POWER 603
#define MON_SHUB_NIGGURATH_BLACK_GOAT_OF_THE_WOODS 604
#define MON_CARCHAROTH_THE_JAWS_OF_THIRST 605
#define MON_ABHOTH_SOURCE_OF_UNCLEANNESS 606
#define MON_TSATHOGGUA 607
#define MON_GOTHMOG_THE_HIGH_CAPTAIN_OF_BALROGS 608
#define MON_GREAT_CTHULHU 609
#define MON_SAURON_THE_SORCERER 610
#define MON_NYARLATHOTEP 611
#define MON_AZATHOTH_THE_DAEMON_SULTAN 612

/* The lower bound of the user area of r_info. */
#define MON_MAX_DISTRO MON_AZATHOTH_THE_DAEMON_SULTAN

/* Give a shorter way to find the ghost. */
#define MON_PLAYER_GHOST \
	MON_NOBODY_THE_UNNAMED_GHOST______________________________________
